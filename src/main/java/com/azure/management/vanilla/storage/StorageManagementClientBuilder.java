// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.storage;

import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.AzureEnvironment;
import com.azure.management.vanilla.storage.implementation.StorageManagementClientImpl;

/** A builder for creating a new instance of the StorageManagementClientImpl type. */
@ServiceClientBuilder(
    serviceClients = {
        OperationsAsyncClient.class,
        SkusAsyncClient.class,
        StorageAccountsAsyncClient.class,
        UsagesAsyncClient.class,
        ManagementPoliciesAsyncClient.class,
        PrivateEndpointConnectionsAsyncClient.class,
        PrivateLinkResourcesAsyncClient.class,
        ObjectReplicationPoliciesOperationAsyncClient.class,
        EncryptionScopesAsyncClient.class,
        BlobServicesAsyncClient.class,
        BlobContainersAsyncClient.class,
        FileServicesAsyncClient.class,
        FileSharesAsyncClient.class,
        QueueServicesAsyncClient.class,
        QueueAsyncClient.class,
        TableServicesAsyncClient.class,
        TableAsyncClient.class,
        OperationsClient.class,
        SkusClient.class,
        StorageAccountsClient.class,
        UsagesClient.class,
        ManagementPoliciesClient.class,
        PrivateEndpointConnectionsClient.class,
        PrivateLinkResourcesClient.class,
        ObjectReplicationPoliciesOperationClient.class,
        EncryptionScopesClient.class,
        BlobServicesClient.class,
        BlobContainersClient.class,
        FileServicesClient.class,
        FileSharesClient.class,
        QueueServicesClient.class,
        QueueClient.class,
        TableServicesClient.class,
        TableClient.class
    })
public final class StorageManagementClientBuilder {
    /*
     * The ID of the target subscription.
     */
    private String subscriptionId;

    /**
     * Sets The ID of the target subscription.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the StorageManagementClientBuilder.
     */
    public StorageManagementClientBuilder subscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /*
     * server parameter
     */
    private String host;

    /**
     * Sets server parameter.
     *
     * @param host the host value.
     * @return the StorageManagementClientBuilder.
     */
    public StorageManagementClientBuilder host(String host) {
        this.host = host;
        return this;
    }

    /*
     * Api Version
     */
    private String apiVersion;

    /**
     * Sets Api Version.
     *
     * @param apiVersion the apiVersion value.
     * @return the StorageManagementClientBuilder.
     */
    public StorageManagementClientBuilder apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /*
     * The environment to connect to
     */
    private AzureEnvironment environment;

    /**
     * Sets The environment to connect to.
     *
     * @param environment the environment value.
     * @return the StorageManagementClientBuilder.
     */
    public StorageManagementClientBuilder environment(AzureEnvironment environment) {
        this.environment = environment;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the StorageManagementClientBuilder.
     */
    public StorageManagementClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of StorageManagementClientImpl with the provided parameters.
     *
     * @return an instance of StorageManagementClientImpl.
     */
    private StorageManagementClientImpl buildInnerClient() {
        if (host == null) {
            this.host = "https://management.azure.com";
        }
        if (apiVersion == null) {
            this.apiVersion = "2019-06-01";
        }
        if (environment == null) {
            this.environment = AzureEnvironment.AZURE;
        }
        if (pipeline == null) {
            this.pipeline =
                new HttpPipelineBuilder()
                    .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                    .build();
        }
        StorageManagementClientImpl client = new StorageManagementClientImpl(pipeline, environment);
        client.setSubscriptionId(this.subscriptionId);
        client.setHost(this.host);
        client.setApiVersion(this.apiVersion);
        return client;
    }

    /**
     * Builds an instance of OperationsAsyncClient async client.
     *
     * @return an instance of OperationsAsyncClient.
     */
    public OperationsAsyncClient buildOperationsAsyncClient() {
        return new OperationsAsyncClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of SkusAsyncClient async client.
     *
     * @return an instance of SkusAsyncClient.
     */
    public SkusAsyncClient buildSkusAsyncClient() {
        return new SkusAsyncClient(buildInnerClient().getSkus());
    }

    /**
     * Builds an instance of StorageAccountsAsyncClient async client.
     *
     * @return an instance of StorageAccountsAsyncClient.
     */
    public StorageAccountsAsyncClient buildStorageAccountsAsyncClient() {
        return new StorageAccountsAsyncClient(buildInnerClient().getStorageAccounts());
    }

    /**
     * Builds an instance of UsagesAsyncClient async client.
     *
     * @return an instance of UsagesAsyncClient.
     */
    public UsagesAsyncClient buildUsagesAsyncClient() {
        return new UsagesAsyncClient(buildInnerClient().getUsages());
    }

    /**
     * Builds an instance of ManagementPoliciesAsyncClient async client.
     *
     * @return an instance of ManagementPoliciesAsyncClient.
     */
    public ManagementPoliciesAsyncClient buildManagementPoliciesAsyncClient() {
        return new ManagementPoliciesAsyncClient(buildInnerClient().getManagementPolicies());
    }

    /**
     * Builds an instance of PrivateEndpointConnectionsAsyncClient async client.
     *
     * @return an instance of PrivateEndpointConnectionsAsyncClient.
     */
    public PrivateEndpointConnectionsAsyncClient buildPrivateEndpointConnectionsAsyncClient() {
        return new PrivateEndpointConnectionsAsyncClient(buildInnerClient().getPrivateEndpointConnections());
    }

    /**
     * Builds an instance of PrivateLinkResourcesAsyncClient async client.
     *
     * @return an instance of PrivateLinkResourcesAsyncClient.
     */
    public PrivateLinkResourcesAsyncClient buildPrivateLinkResourcesAsyncClient() {
        return new PrivateLinkResourcesAsyncClient(buildInnerClient().getPrivateLinkResources());
    }

    /**
     * Builds an instance of ObjectReplicationPoliciesOperationAsyncClient async client.
     *
     * @return an instance of ObjectReplicationPoliciesOperationAsyncClient.
     */
    public ObjectReplicationPoliciesOperationAsyncClient buildObjectReplicationPoliciesOperationAsyncClient() {
        return new ObjectReplicationPoliciesOperationAsyncClient(
            buildInnerClient().getObjectReplicationPoliciesOperations());
    }

    /**
     * Builds an instance of EncryptionScopesAsyncClient async client.
     *
     * @return an instance of EncryptionScopesAsyncClient.
     */
    public EncryptionScopesAsyncClient buildEncryptionScopesAsyncClient() {
        return new EncryptionScopesAsyncClient(buildInnerClient().getEncryptionScopes());
    }

    /**
     * Builds an instance of BlobServicesAsyncClient async client.
     *
     * @return an instance of BlobServicesAsyncClient.
     */
    public BlobServicesAsyncClient buildBlobServicesAsyncClient() {
        return new BlobServicesAsyncClient(buildInnerClient().getBlobServices());
    }

    /**
     * Builds an instance of BlobContainersAsyncClient async client.
     *
     * @return an instance of BlobContainersAsyncClient.
     */
    public BlobContainersAsyncClient buildBlobContainersAsyncClient() {
        return new BlobContainersAsyncClient(buildInnerClient().getBlobContainers());
    }

    /**
     * Builds an instance of FileServicesAsyncClient async client.
     *
     * @return an instance of FileServicesAsyncClient.
     */
    public FileServicesAsyncClient buildFileServicesAsyncClient() {
        return new FileServicesAsyncClient(buildInnerClient().getFileServices());
    }

    /**
     * Builds an instance of FileSharesAsyncClient async client.
     *
     * @return an instance of FileSharesAsyncClient.
     */
    public FileSharesAsyncClient buildFileSharesAsyncClient() {
        return new FileSharesAsyncClient(buildInnerClient().getFileShares());
    }

    /**
     * Builds an instance of QueueServicesAsyncClient async client.
     *
     * @return an instance of QueueServicesAsyncClient.
     */
    public QueueServicesAsyncClient buildQueueServicesAsyncClient() {
        return new QueueServicesAsyncClient(buildInnerClient().getQueueServices());
    }

    /**
     * Builds an instance of QueueAsyncClient async client.
     *
     * @return an instance of QueueAsyncClient.
     */
    public QueueAsyncClient buildQueueAsyncClient() {
        return new QueueAsyncClient(buildInnerClient().getQueues());
    }

    /**
     * Builds an instance of TableServicesAsyncClient async client.
     *
     * @return an instance of TableServicesAsyncClient.
     */
    public TableServicesAsyncClient buildTableServicesAsyncClient() {
        return new TableServicesAsyncClient(buildInnerClient().getTableServices());
    }

    /**
     * Builds an instance of TableAsyncClient async client.
     *
     * @return an instance of TableAsyncClient.
     */
    public TableAsyncClient buildTableAsyncClient() {
        return new TableAsyncClient(buildInnerClient().getTables());
    }

    /**
     * Builds an instance of OperationsClient sync client.
     *
     * @return an instance of OperationsClient.
     */
    public OperationsClient buildOperationsClient() {
        return new OperationsClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of SkusClient sync client.
     *
     * @return an instance of SkusClient.
     */
    public SkusClient buildSkusClient() {
        return new SkusClient(buildInnerClient().getSkus());
    }

    /**
     * Builds an instance of StorageAccountsClient sync client.
     *
     * @return an instance of StorageAccountsClient.
     */
    public StorageAccountsClient buildStorageAccountsClient() {
        return new StorageAccountsClient(buildInnerClient().getStorageAccounts());
    }

    /**
     * Builds an instance of UsagesClient sync client.
     *
     * @return an instance of UsagesClient.
     */
    public UsagesClient buildUsagesClient() {
        return new UsagesClient(buildInnerClient().getUsages());
    }

    /**
     * Builds an instance of ManagementPoliciesClient sync client.
     *
     * @return an instance of ManagementPoliciesClient.
     */
    public ManagementPoliciesClient buildManagementPoliciesClient() {
        return new ManagementPoliciesClient(buildInnerClient().getManagementPolicies());
    }

    /**
     * Builds an instance of PrivateEndpointConnectionsClient sync client.
     *
     * @return an instance of PrivateEndpointConnectionsClient.
     */
    public PrivateEndpointConnectionsClient buildPrivateEndpointConnectionsClient() {
        return new PrivateEndpointConnectionsClient(buildInnerClient().getPrivateEndpointConnections());
    }

    /**
     * Builds an instance of PrivateLinkResourcesClient sync client.
     *
     * @return an instance of PrivateLinkResourcesClient.
     */
    public PrivateLinkResourcesClient buildPrivateLinkResourcesClient() {
        return new PrivateLinkResourcesClient(buildInnerClient().getPrivateLinkResources());
    }

    /**
     * Builds an instance of ObjectReplicationPoliciesOperationClient sync client.
     *
     * @return an instance of ObjectReplicationPoliciesOperationClient.
     */
    public ObjectReplicationPoliciesOperationClient buildObjectReplicationPoliciesOperationClient() {
        return new ObjectReplicationPoliciesOperationClient(
            buildInnerClient().getObjectReplicationPoliciesOperations());
    }

    /**
     * Builds an instance of EncryptionScopesClient sync client.
     *
     * @return an instance of EncryptionScopesClient.
     */
    public EncryptionScopesClient buildEncryptionScopesClient() {
        return new EncryptionScopesClient(buildInnerClient().getEncryptionScopes());
    }

    /**
     * Builds an instance of BlobServicesClient sync client.
     *
     * @return an instance of BlobServicesClient.
     */
    public BlobServicesClient buildBlobServicesClient() {
        return new BlobServicesClient(buildInnerClient().getBlobServices());
    }

    /**
     * Builds an instance of BlobContainersClient sync client.
     *
     * @return an instance of BlobContainersClient.
     */
    public BlobContainersClient buildBlobContainersClient() {
        return new BlobContainersClient(buildInnerClient().getBlobContainers());
    }

    /**
     * Builds an instance of FileServicesClient sync client.
     *
     * @return an instance of FileServicesClient.
     */
    public FileServicesClient buildFileServicesClient() {
        return new FileServicesClient(buildInnerClient().getFileServices());
    }

    /**
     * Builds an instance of FileSharesClient sync client.
     *
     * @return an instance of FileSharesClient.
     */
    public FileSharesClient buildFileSharesClient() {
        return new FileSharesClient(buildInnerClient().getFileShares());
    }

    /**
     * Builds an instance of QueueServicesClient sync client.
     *
     * @return an instance of QueueServicesClient.
     */
    public QueueServicesClient buildQueueServicesClient() {
        return new QueueServicesClient(buildInnerClient().getQueueServices());
    }

    /**
     * Builds an instance of QueueClient sync client.
     *
     * @return an instance of QueueClient.
     */
    public QueueClient buildQueueClient() {
        return new QueueClient(buildInnerClient().getQueues());
    }

    /**
     * Builds an instance of TableServicesClient sync client.
     *
     * @return an instance of TableServicesClient.
     */
    public TableServicesClient buildTableServicesClient() {
        return new TableServicesClient(buildInnerClient().getTableServices());
    }

    /**
     * Builds an instance of TableClient sync client.
     *
     * @return an instance of TableClient.
     */
    public TableClient buildTableClient() {
        return new TableClient(buildInnerClient().getTables());
    }
}
