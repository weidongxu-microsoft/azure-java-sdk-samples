// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.storage;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.exception.ManagementException;
import com.azure.core.util.Context;
import com.azure.management.vanilla.storage.implementation.PrivateLinkResourcesImpl;
import com.azure.management.vanilla.storage.models.PrivateLinkResourceListResult;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous StorageManagementClient type. */
@ServiceClient(builder = StorageManagementClientBuilder.class)
public final class PrivateLinkResourcesAsyncClient {
    private PrivateLinkResourcesImpl serviceClient;

    /** Initializes an instance of PrivateLinkResources client. */
    PrivateLinkResourcesAsyncClient(PrivateLinkResourcesImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets the private link resources that need to be created for a storage account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage account names
     *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources that need to be created for a storage account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<PrivateLinkResourceListResult>> listByStorageAccountWithResponse(
        String resourceGroupName, String accountName) {
        return this.serviceClient.listByStorageAccountWithResponseAsync(resourceGroupName, accountName);
    }

    /**
     * Gets the private link resources that need to be created for a storage account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage account names
     *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources that need to be created for a storage account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<PrivateLinkResourceListResult>> listByStorageAccountWithResponse(
        String resourceGroupName, String accountName, Context context) {
        return this.serviceClient.listByStorageAccountWithResponseAsync(resourceGroupName, accountName, context);
    }

    /**
     * Gets the private link resources that need to be created for a storage account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage account names
     *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources that need to be created for a storage account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PrivateLinkResourceListResult> listByStorageAccount(String resourceGroupName, String accountName) {
        return this.serviceClient.listByStorageAccountAsync(resourceGroupName, accountName);
    }

    /**
     * Gets the private link resources that need to be created for a storage account.
     *
     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case
     *     insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage account names
     *     must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the private link resources that need to be created for a storage account.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<PrivateLinkResourceListResult> listByStorageAccount(
        String resourceGroupName, String accountName, Context context) {
        return this.serviceClient.listByStorageAccountAsync(resourceGroupName, accountName, context);
    }
}
