// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.storage.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The TagFilter model. */
@Fluent
public final class TagFilter {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TagFilter.class);

    /*
     * This is the filter tag name, it can have 1 - 128 characters
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /*
     * This is the comparison operator which is used for object comparison and
     * filtering. Only == (equality operator) is currently supported
     */
    @JsonProperty(value = "op", required = true)
    private String op;

    /*
     * This is the filter tag value field used for tag based filtering, it can
     * have 0 - 256 characters
     */
    @JsonProperty(value = "value", required = true)
    private String value;

    /**
     * Get the name property: This is the filter tag name, it can have 1 - 128 characters.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: This is the filter tag name, it can have 1 - 128 characters.
     *
     * @param name the name value to set.
     * @return the TagFilter object itself.
     */
    public TagFilter setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the op property: This is the comparison operator which is used for object comparison and filtering. Only ==
     * (equality operator) is currently supported.
     *
     * @return the op value.
     */
    public String getOp() {
        return this.op;
    }

    /**
     * Set the op property: This is the comparison operator which is used for object comparison and filtering. Only ==
     * (equality operator) is currently supported.
     *
     * @param op the op value to set.
     * @return the TagFilter object itself.
     */
    public TagFilter setOp(String op) {
        this.op = op;
        return this;
    }

    /**
     * Get the value property: This is the filter tag value field used for tag based filtering, it can have 0 - 256
     * characters.
     *
     * @return the value value.
     */
    public String getValue() {
        return this.value;
    }

    /**
     * Set the value property: This is the filter tag value field used for tag based filtering, it can have 0 - 256
     * characters.
     *
     * @param value the value value to set.
     * @return the TagFilter object itself.
     */
    public TagFilter setValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getName() == null) {
            throw logger
                .logExceptionAsError(new IllegalArgumentException("Missing required property name in model TagFilter"));
        }
        if (getOp() == null) {
            throw logger
                .logExceptionAsError(new IllegalArgumentException("Missing required property op in model TagFilter"));
        }
        if (getValue() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property value in model TagFilter"));
        }
    }
}
