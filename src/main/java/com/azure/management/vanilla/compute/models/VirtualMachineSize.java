// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The VirtualMachineSize model. */
@Fluent
public final class VirtualMachineSize {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VirtualMachineSize.class);

    /*
     * The name of the virtual machine size.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The number of cores supported by the virtual machine size.
     */
    @JsonProperty(value = "numberOfCores")
    private Integer numberOfCores;

    /*
     * The OS disk size, in MB, allowed by the virtual machine size.
     */
    @JsonProperty(value = "osDiskSizeInMB")
    private Integer osDiskSizeInMB;

    /*
     * The resource disk size, in MB, allowed by the virtual machine size.
     */
    @JsonProperty(value = "resourceDiskSizeInMB")
    private Integer resourceDiskSizeInMB;

    /*
     * The amount of memory, in MB, supported by the virtual machine size.
     */
    @JsonProperty(value = "memoryInMB")
    private Integer memoryInMB;

    /*
     * The maximum number of data disks that can be attached to the virtual
     * machine size.
     */
    @JsonProperty(value = "maxDataDiskCount")
    private Integer maxDataDiskCount;

    /**
     * Get the name property: The name of the virtual machine size.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: The name of the virtual machine size.
     *
     * @param name the name value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the numberOfCores property: The number of cores supported by the virtual machine size.
     *
     * @return the numberOfCores value.
     */
    public Integer getNumberOfCores() {
        return this.numberOfCores;
    }

    /**
     * Set the numberOfCores property: The number of cores supported by the virtual machine size.
     *
     * @param numberOfCores the numberOfCores value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setNumberOfCores(Integer numberOfCores) {
        this.numberOfCores = numberOfCores;
        return this;
    }

    /**
     * Get the osDiskSizeInMB property: The OS disk size, in MB, allowed by the virtual machine size.
     *
     * @return the osDiskSizeInMB value.
     */
    public Integer getOsDiskSizeInMB() {
        return this.osDiskSizeInMB;
    }

    /**
     * Set the osDiskSizeInMB property: The OS disk size, in MB, allowed by the virtual machine size.
     *
     * @param osDiskSizeInMB the osDiskSizeInMB value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setOsDiskSizeInMB(Integer osDiskSizeInMB) {
        this.osDiskSizeInMB = osDiskSizeInMB;
        return this;
    }

    /**
     * Get the resourceDiskSizeInMB property: The resource disk size, in MB, allowed by the virtual machine size.
     *
     * @return the resourceDiskSizeInMB value.
     */
    public Integer getResourceDiskSizeInMB() {
        return this.resourceDiskSizeInMB;
    }

    /**
     * Set the resourceDiskSizeInMB property: The resource disk size, in MB, allowed by the virtual machine size.
     *
     * @param resourceDiskSizeInMB the resourceDiskSizeInMB value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setResourceDiskSizeInMB(Integer resourceDiskSizeInMB) {
        this.resourceDiskSizeInMB = resourceDiskSizeInMB;
        return this;
    }

    /**
     * Get the memoryInMB property: The amount of memory, in MB, supported by the virtual machine size.
     *
     * @return the memoryInMB value.
     */
    public Integer getMemoryInMB() {
        return this.memoryInMB;
    }

    /**
     * Set the memoryInMB property: The amount of memory, in MB, supported by the virtual machine size.
     *
     * @param memoryInMB the memoryInMB value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setMemoryInMB(Integer memoryInMB) {
        this.memoryInMB = memoryInMB;
        return this;
    }

    /**
     * Get the maxDataDiskCount property: The maximum number of data disks that can be attached to the virtual machine
     * size.
     *
     * @return the maxDataDiskCount value.
     */
    public Integer getMaxDataDiskCount() {
        return this.maxDataDiskCount;
    }

    /**
     * Set the maxDataDiskCount property: The maximum number of data disks that can be attached to the virtual machine
     * size.
     *
     * @param maxDataDiskCount the maxDataDiskCount value to set.
     * @return the VirtualMachineSize object itself.
     */
    public VirtualMachineSize setMaxDataDiskCount(Integer maxDataDiskCount) {
        this.maxDataDiskCount = maxDataDiskCount;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
