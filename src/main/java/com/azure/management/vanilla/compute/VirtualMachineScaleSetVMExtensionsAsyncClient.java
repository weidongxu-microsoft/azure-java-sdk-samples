// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.PollerFlux;
import com.azure.management.vanilla.compute.implementation.VirtualMachineScaleSetVMExtensionsImpl;
import com.azure.management.vanilla.compute.models.ApiErrorException;
import com.azure.management.vanilla.compute.models.VirtualMachineExtension;
import com.azure.management.vanilla.compute.models.VirtualMachineExtensionUpdate;
import com.azure.management.vanilla.compute.models.VirtualMachineExtensionsListResult;
import java.nio.ByteBuffer;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous ComputeManagementClient type. */
@ServiceClient(builder = ComputeManagementClientBuilder.class)
public final class VirtualMachineScaleSetVMExtensionsAsyncClient {
    private VirtualMachineScaleSetVMExtensionsImpl serviceClient;

    /** Initializes an instance of VirtualMachineScaleSetVMExtensions client. */
    VirtualMachineScaleSetVMExtensionsAsyncClient(VirtualMachineScaleSetVMExtensionsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters) {
        return this
            .serviceClient
            .createOrUpdateWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters,
        Context context) {
        return this
            .serviceClient
            .createOrUpdateWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<VirtualMachineExtension>, VirtualMachineExtension> beginCreateOrUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters) {
        return this
            .serviceClient
            .beginCreateOrUpdate(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<VirtualMachineExtension>, VirtualMachineExtension> beginCreateOrUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdate(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> createOrUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters) {
        return this
            .serviceClient
            .createOrUpdateAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> createOrUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters,
        Context context) {
        return this
            .serviceClient
            .createOrUpdateAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> updateWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters) {
        return this
            .serviceClient
            .updateWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> updateWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters,
        Context context) {
        return this
            .serviceClient
            .updateWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<VirtualMachineExtension>, VirtualMachineExtension> beginUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters) {
        return this
            .serviceClient
            .beginUpdate(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<VirtualMachineExtension>, VirtualMachineExtension> beginUpdate(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginUpdate(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> update(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters) {
        return this
            .serviceClient
            .updateAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> update(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters,
        Context context) {
        return this
            .serviceClient
            .updateAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> deleteWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this
            .serviceClient
            .deleteWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Flux<ByteBuffer>>> deleteWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, Context context) {
        return this
            .serviceClient
            .deleteWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, context);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this.serviceClient.beginDelete(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, Context context) {
        return this.serviceClient.beginDelete(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, context);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> delete(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this.serviceClient.deleteAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> delete(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, Context context) {
        return this.serviceClient.deleteAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, context);
    }

    /**
     * The operation to get the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> getWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, String expand) {
        return this
            .serviceClient
            .getWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, expand);
    }

    /**
     * The operation to get the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> getWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        String expand,
        Context context) {
        return this
            .serviceClient
            .getWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, expand, context);
    }

    /**
     * The operation to get the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> get(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, String expand) {
        return this.serviceClient.getAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, expand);
    }

    /**
     * The operation to get the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> get(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        String expand,
        Context context) {
        return this
            .serviceClient
            .getAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, expand, context);
    }

    /**
     * The operation to get the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> get(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this.serviceClient.getAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to get all extensions of an instance in Virtual Machine Scaleset.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Extension operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtensionsListResult>> listWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String expand) {
        return this.serviceClient.listWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, expand);
    }

    /**
     * The operation to get all extensions of an instance in Virtual Machine Scaleset.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Extension operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtensionsListResult>> listWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String expand, Context context) {
        return this.serviceClient.listWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, expand, context);
    }

    /**
     * The operation to get all extensions of an instance in Virtual Machine Scaleset.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Extension operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtensionsListResult> list(
        String resourceGroupName, String vmScaleSetName, String instanceId, String expand) {
        return this.serviceClient.listAsync(resourceGroupName, vmScaleSetName, instanceId, expand);
    }

    /**
     * The operation to get all extensions of an instance in Virtual Machine Scaleset.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Extension operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtensionsListResult> list(
        String resourceGroupName, String vmScaleSetName, String instanceId, String expand, Context context) {
        return this.serviceClient.listAsync(resourceGroupName, vmScaleSetName, instanceId, expand, context);
    }

    /**
     * The operation to get all extensions of an instance in Virtual Machine Scaleset.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Extension operation response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtensionsListResult> list(
        String resourceGroupName, String vmScaleSetName, String instanceId) {
        return this.serviceClient.listAsync(resourceGroupName, vmScaleSetName, instanceId);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> beginCreateOrUpdateWithoutPollingWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPollingWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> beginCreateOrUpdateWithoutPollingWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPollingWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPollingAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to create or update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtension extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPollingAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> beginUpdateWithoutPollingWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters) {
        return this
            .serviceClient
            .beginUpdateWithoutPollingWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<VirtualMachineExtension>> beginUpdateWithoutPollingWithResponse(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginUpdateWithoutPollingWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> beginUpdateWithoutPolling(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters) {
        return this
            .serviceClient
            .beginUpdateWithoutPollingAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters);
    }

    /**
     * The operation to update the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Describes a Virtual Machine Extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return describes a Virtual Machine Extension.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<VirtualMachineExtension> beginUpdateWithoutPolling(
        String resourceGroupName,
        String vmScaleSetName,
        String instanceId,
        String vmExtensionName,
        VirtualMachineExtensionUpdate extensionParameters,
        Context context) {
        return this
            .serviceClient
            .beginUpdateWithoutPollingAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, extensionParameters, context);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> beginDeleteWithoutPollingWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this
            .serviceClient
            .beginDeleteWithoutPollingWithResponseAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> beginDeleteWithoutPollingWithResponse(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, Context context) {
        return this
            .serviceClient
            .beginDeleteWithoutPollingWithResponseAsync(
                resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, context);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> beginDeleteWithoutPolling(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName) {
        return this
            .serviceClient
            .beginDeleteWithoutPollingAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName);
    }

    /**
     * The operation to delete the VMSS VM extension.
     *
     * @param resourceGroupName The name of the resource group.
     * @param vmScaleSetName The name of the VM scale set.
     * @param instanceId The instance ID of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> beginDeleteWithoutPolling(
        String resourceGroupName, String vmScaleSetName, String instanceId, String vmExtensionName, Context context) {
        return this
            .serviceClient
            .beginDeleteWithoutPollingAsync(resourceGroupName, vmScaleSetName, instanceId, vmExtensionName, context);
    }
}
