// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.PollerFlux;
import com.azure.management.vanilla.compute.implementation.GalleryApplicationVersionsImpl;
import com.azure.management.vanilla.compute.models.ApiErrorException;
import com.azure.management.vanilla.compute.models.GalleryApplicationVersion;
import com.azure.management.vanilla.compute.models.GalleryApplicationVersionUpdate;
import com.azure.management.vanilla.compute.models.ReplicationStatusTypes;

/** Initializes a new instance of the synchronous ComputeManagementClient type. */
@ServiceClient(builder = ComputeManagementClientBuilder.class)
public final class GalleryApplicationVersionsClient {
    private GalleryApplicationVersionsImpl serviceClient;

    /** Initializes an instance of GalleryApplicationVersions client. */
    GalleryApplicationVersionsClient(GalleryApplicationVersionsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryApplicationVersion>, GalleryApplicationVersion> beginCreateOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion) {
        return this
            .serviceClient
            .beginCreateOrUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryApplicationVersion>, GalleryApplicationVersion> beginCreateOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion createOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion) {
        return this
            .serviceClient
            .createOrUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion createOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .createOrUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryApplicationVersion>, GalleryApplicationVersion> beginUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion) {
        return this
            .serviceClient
            .beginUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryApplicationVersion>, GalleryApplicationVersion> beginUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .beginUpdate(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion update(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion) {
        return this
            .serviceClient
            .update(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion update(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .update(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Retrieves information about a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion get(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        ReplicationStatusTypes expand) {
        return this
            .serviceClient
            .get(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, expand);
    }

    /**
     * Retrieves information about a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion get(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        ReplicationStatusTypes expand,
        Context context) {
        return this
            .serviceClient
            .get(
                resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, expand, context);
    }

    /**
     * Retrieves information about a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion get(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName) {
        return this
            .serviceClient
            .get(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName) {
        return this
            .serviceClient
            .beginDelete(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        Context context) {
        return this
            .serviceClient
            .beginDelete(
                resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, context);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName) {
        this
            .serviceClient
            .delete(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        Context context) {
        this
            .serviceClient
            .delete(resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, context);
    }

    /**
     * List gallery Application Versions in a gallery Application Definition.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the
     *     Application Versions are to be listed.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Gallery Application version operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<GalleryApplicationVersion> listByGalleryApplication(
        String resourceGroupName, String galleryName, String galleryApplicationName) {
        return this.serviceClient.listByGalleryApplication(resourceGroupName, galleryName, galleryApplicationName);
    }

    /**
     * List gallery Application Versions in a gallery Application Definition.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from which the
     *     Application Versions are to be listed.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Gallery Application version operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<GalleryApplicationVersion> listByGalleryApplication(
        String resourceGroupName, String galleryName, String galleryApplicationName, Context context) {
        return this
            .serviceClient
            .listByGalleryApplication(resourceGroupName, galleryName, galleryApplicationName, context);
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Create or update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be created.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be created. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersion galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion beginUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion) {
        return this
            .serviceClient
            .beginUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion);
    }

    /**
     * Update a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version is
     *     to be updated.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be updated. Needs to follow
     *     semantic version name pattern: The allowed characters are digit and period. Digits must be within the range
     *     of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryApplicationVersion Specifies information about the gallery Application Version that you want to
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Application Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryApplicationVersion beginUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        GalleryApplicationVersionUpdate galleryApplicationVersion,
        Context context) {
        return this
            .serviceClient
            .beginUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryApplicationName,
                galleryApplicationVersionName,
                galleryApplicationVersion,
                context);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName) {
        this
            .serviceClient
            .beginDeleteWithoutPolling(
                resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName);
    }

    /**
     * Delete a gallery Application Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Application Gallery in which the Application Definition resides.
     * @param galleryApplicationName The name of the gallery Application Definition in which the Application Version
     *     resides.
     * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryApplicationName,
        String galleryApplicationVersionName,
        Context context) {
        this
            .serviceClient
            .beginDeleteWithoutPolling(
                resourceGroupName, galleryName, galleryApplicationName, galleryApplicationVersionName, context);
    }
}
