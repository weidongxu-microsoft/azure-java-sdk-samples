// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.PollerFlux;
import com.azure.management.vanilla.compute.implementation.GalleryImageVersionsImpl;
import com.azure.management.vanilla.compute.models.ApiErrorException;
import com.azure.management.vanilla.compute.models.GalleryImageVersion;
import com.azure.management.vanilla.compute.models.GalleryImageVersionUpdate;
import com.azure.management.vanilla.compute.models.ReplicationStatusTypes;

/** Initializes a new instance of the synchronous ComputeManagementClient type. */
@ServiceClient(builder = ComputeManagementClientBuilder.class)
public final class GalleryImageVersionsClient {
    private GalleryImageVersionsImpl serviceClient;

    /** Initializes an instance of GalleryImageVersions client. */
    GalleryImageVersionsClient(GalleryImageVersionsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryImageVersion>, GalleryImageVersion> beginCreateOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion) {
        return this
            .serviceClient
            .beginCreateOrUpdate(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryImageVersion>, GalleryImageVersion> beginCreateOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdate(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion createOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion) {
        return this
            .serviceClient
            .createOrUpdate(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion createOrUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .createOrUpdate(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryImageVersion>, GalleryImageVersion> beginUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion) {
        return this
            .serviceClient
            .beginUpdate(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<GalleryImageVersion>, GalleryImageVersion> beginUpdate(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .beginUpdate(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion update(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion) {
        return this
            .serviceClient
            .update(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion update(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .update(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Retrieves information about a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved.
     * @param expand The expand expression to apply on the operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion get(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        ReplicationStatusTypes expand) {
        return this
            .serviceClient
            .get(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, expand);
    }

    /**
     * Retrieves information about a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved.
     * @param expand The expand expression to apply on the operation.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion get(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        ReplicationStatusTypes expand,
        Context context) {
        return this
            .serviceClient
            .get(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, expand, context);
    }

    /**
     * Retrieves information about a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be retrieved.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion get(
        String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName) {
        return this.serviceClient.get(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName) {
        return this
            .serviceClient
            .beginDelete(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        Context context) {
        return this
            .serviceClient
            .beginDelete(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, context);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(
        String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName) {
        this.serviceClient.delete(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        Context context) {
        this.serviceClient.delete(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, context);
    }

    /**
     * List gallery Image Versions in a gallery Image Definition.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are
     *     to be listed.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Gallery Image version operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<GalleryImageVersion> listByGalleryImage(
        String resourceGroupName, String galleryName, String galleryImageName) {
        return this.serviceClient.listByGalleryImage(resourceGroupName, galleryName, galleryImageName);
    }

    /**
     * List gallery Image Versions in a gallery Image Definition.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image Versions are
     *     to be listed.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Gallery Image version operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<GalleryImageVersion> listByGalleryImage(
        String resourceGroupName, String galleryName, String galleryImageName, Context context) {
        return this.serviceClient.listByGalleryImage(resourceGroupName, galleryName, galleryImageName, context);
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPolling(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Create or update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be created.
     * @param galleryImageVersionName The name of the gallery Image Version to be created. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to create or
     *     update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion beginCreateOrUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersion galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .beginCreateOrUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion beginUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion) {
        return this
            .serviceClient
            .beginUpdateWithoutPolling(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, galleryImageVersion);
    }

    /**
     * Update a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version is to be updated.
     * @param galleryImageVersionName The name of the gallery Image Version to be updated. Needs to follow semantic
     *     version name pattern: The allowed characters are digit and period. Digits must be within the range of a
     *     32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;.
     * @param galleryImageVersion Specifies information about the gallery Image Version that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the gallery Image Version that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public GalleryImageVersion beginUpdateWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        GalleryImageVersionUpdate galleryImageVersion,
        Context context) {
        return this
            .serviceClient
            .beginUpdateWithoutPolling(
                resourceGroupName,
                galleryName,
                galleryImageName,
                galleryImageVersionName,
                galleryImageVersion,
                context);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(
        String resourceGroupName, String galleryName, String galleryImageName, String galleryImageVersionName) {
        this
            .serviceClient
            .beginDeleteWithoutPolling(resourceGroupName, galleryName, galleryImageName, galleryImageVersionName);
    }

    /**
     * Delete a gallery Image Version.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.
     * @param galleryImageName The name of the gallery Image Definition in which the Image Version resides.
     * @param galleryImageVersionName The name of the gallery Image Version to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(
        String resourceGroupName,
        String galleryName,
        String galleryImageName,
        String galleryImageVersionName,
        Context context) {
        this
            .serviceClient
            .beginDeleteWithoutPolling(
                resourceGroupName, galleryName, galleryImageName, galleryImageVersionName, context);
    }
}
