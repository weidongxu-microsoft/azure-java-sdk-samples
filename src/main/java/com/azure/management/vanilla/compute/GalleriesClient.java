// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.PollerFlux;
import com.azure.management.vanilla.compute.implementation.GalleriesImpl;
import com.azure.management.vanilla.compute.models.ApiErrorException;
import com.azure.management.vanilla.compute.models.Gallery;
import com.azure.management.vanilla.compute.models.GalleryUpdate;

/** Initializes a new instance of the synchronous ComputeManagementClient type. */
@ServiceClient(builder = ComputeManagementClientBuilder.class)
public final class GalleriesClient {
    private GalleriesImpl serviceClient;

    /** Initializes an instance of Galleries client. */
    GalleriesClient(GalleriesImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Gallery>, Gallery> beginCreateOrUpdate(
        String resourceGroupName, String galleryName, Gallery gallery) {
        return this.serviceClient.beginCreateOrUpdate(resourceGroupName, galleryName, gallery);
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Gallery>, Gallery> beginCreateOrUpdate(
        String resourceGroupName, String galleryName, Gallery gallery, Context context) {
        return this.serviceClient.beginCreateOrUpdate(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery createOrUpdate(String resourceGroupName, String galleryName, Gallery gallery) {
        return this.serviceClient.createOrUpdate(resourceGroupName, galleryName, gallery);
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery createOrUpdate(String resourceGroupName, String galleryName, Gallery gallery, Context context) {
        return this.serviceClient.createOrUpdate(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Gallery>, Gallery> beginUpdate(
        String resourceGroupName, String galleryName, GalleryUpdate gallery) {
        return this.serviceClient.beginUpdate(resourceGroupName, galleryName, gallery);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Gallery>, Gallery> beginUpdate(
        String resourceGroupName, String galleryName, GalleryUpdate gallery, Context context) {
        return this.serviceClient.beginUpdate(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery update(String resourceGroupName, String galleryName, GalleryUpdate gallery) {
        return this.serviceClient.update(resourceGroupName, galleryName, gallery);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery update(String resourceGroupName, String galleryName, GalleryUpdate gallery, Context context) {
        return this.serviceClient.update(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Retrieves information about a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery getByResourceGroup(String resourceGroupName, String galleryName) {
        return this.serviceClient.getByResourceGroup(resourceGroupName, galleryName);
    }

    /**
     * Retrieves information about a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery getByResourceGroup(String resourceGroupName, String galleryName, Context context) {
        return this.serviceClient.getByResourceGroup(resourceGroupName, galleryName, context);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(String resourceGroupName, String galleryName) {
        return this.serviceClient.beginDelete(resourceGroupName, galleryName);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the completion.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public PollerFlux<PollResult<Void>, Void> beginDelete(
        String resourceGroupName, String galleryName, Context context) {
        return this.serviceClient.beginDelete(resourceGroupName, galleryName, context);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(String resourceGroupName, String galleryName) {
        this.serviceClient.delete(resourceGroupName, galleryName);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void delete(String resourceGroupName, String galleryName, Context context) {
        this.serviceClient.delete(resourceGroupName, galleryName, context);
    }

    /**
     * List galleries under a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Galleries operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Gallery> listByResourceGroup(String resourceGroupName) {
        return this.serviceClient.listByResourceGroup(resourceGroupName);
    }

    /**
     * List galleries under a resource group.
     *
     * @param resourceGroupName The name of the resource group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Galleries operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Gallery> listByResourceGroup(String resourceGroupName, Context context) {
        return this.serviceClient.listByResourceGroup(resourceGroupName, context);
    }

    /**
     * List galleries under a subscription.
     *
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Galleries operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Gallery> list() {
        return this.serviceClient.list();
    }

    /**
     * List galleries under a subscription.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List Galleries operation response.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    public PagedIterable<Gallery> list(Context context) {
        return this.serviceClient.list(context);
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery beginCreateOrUpdateWithoutPolling(String resourceGroupName, String galleryName, Gallery gallery) {
        return this.serviceClient.beginCreateOrUpdateWithoutPolling(resourceGroupName, galleryName, gallery);
    }

    /**
     * Create or update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to create or update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery beginCreateOrUpdateWithoutPolling(
        String resourceGroupName, String galleryName, Gallery gallery, Context context) {
        return this.serviceClient.beginCreateOrUpdateWithoutPolling(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery beginUpdateWithoutPolling(String resourceGroupName, String galleryName, GalleryUpdate gallery) {
        return this.serviceClient.beginUpdateWithoutPolling(resourceGroupName, galleryName, gallery);
    }

    /**
     * Update a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with
     *     dots and periods allowed in the middle. The maximum length is 80 characters.
     * @param gallery Specifies information about the Shared Image Gallery that you want to update.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return specifies information about the Shared Image Gallery that you want to create or update.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Gallery beginUpdateWithoutPolling(
        String resourceGroupName, String galleryName, GalleryUpdate gallery, Context context) {
        return this.serviceClient.beginUpdateWithoutPolling(resourceGroupName, galleryName, gallery, context);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(String resourceGroupName, String galleryName) {
        this.serviceClient.beginDeleteWithoutPolling(resourceGroupName, galleryName);
    }

    /**
     * Delete a Shared Image Gallery.
     *
     * @param resourceGroupName The name of the resource group.
     * @param galleryName The name of the Shared Image Gallery to be deleted.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ApiErrorException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public void beginDeleteWithoutPolling(String resourceGroupName, String galleryName, Context context) {
        this.serviceClient.beginDeleteWithoutPolling(resourceGroupName, galleryName, context);
    }
}
