// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.compute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The DedicatedHostInstanceView model. */
@Fluent
public final class DedicatedHostInstanceView {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DedicatedHostInstanceView.class);

    /*
     * Specifies the unique id of the dedicated physical machine on which the
     * dedicated host resides.
     */
    @JsonProperty(value = "assetId", access = JsonProperty.Access.WRITE_ONLY)
    private String assetId;

    /*
     * Unutilized capacity of the dedicated host.
     */
    @JsonProperty(value = "availableCapacity")
    private DedicatedHostAvailableCapacity availableCapacity;

    /*
     * The resource status information.
     */
    @JsonProperty(value = "statuses")
    private List<InstanceViewStatus> statuses;

    /**
     * Get the assetId property: Specifies the unique id of the dedicated physical machine on which the dedicated host
     * resides.
     *
     * @return the assetId value.
     */
    public String getAssetId() {
        return this.assetId;
    }

    /**
     * Get the availableCapacity property: Unutilized capacity of the dedicated host.
     *
     * @return the availableCapacity value.
     */
    public DedicatedHostAvailableCapacity getAvailableCapacity() {
        return this.availableCapacity;
    }

    /**
     * Set the availableCapacity property: Unutilized capacity of the dedicated host.
     *
     * @param availableCapacity the availableCapacity value to set.
     * @return the DedicatedHostInstanceView object itself.
     */
    public DedicatedHostInstanceView setAvailableCapacity(DedicatedHostAvailableCapacity availableCapacity) {
        this.availableCapacity = availableCapacity;
        return this;
    }

    /**
     * Get the statuses property: The resource status information.
     *
     * @return the statuses value.
     */
    public List<InstanceViewStatus> getStatuses() {
        return this.statuses;
    }

    /**
     * Set the statuses property: The resource status information.
     *
     * @param statuses the statuses value to set.
     * @return the DedicatedHostInstanceView object itself.
     */
    public DedicatedHostInstanceView setStatuses(List<InstanceViewStatus> statuses) {
        this.statuses = statuses;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getAvailableCapacity() != null) {
            getAvailableCapacity().validate();
        }
        if (getStatuses() != null) {
            getStatuses().forEach(e -> e.validate());
        }
    }
}
