// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.resources.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The DeploymentValidateResult model. */
@Fluent
public final class DeploymentValidateResult {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(DeploymentValidateResult.class);

    /*
     * The deployment validation error.
     */
    @JsonProperty(value = "error")
    private ManagementError error;

    /*
     * The template deployment properties.
     */
    @JsonProperty(value = "properties")
    private DeploymentPropertiesExtended properties;

    /**
     * Get the error property: The deployment validation error.
     *
     * @return the error value.
     */
    public ManagementError getError() {
        return this.error;
    }

    /**
     * Set the error property: The deployment validation error.
     *
     * @param error the error value to set.
     * @return the DeploymentValidateResult object itself.
     */
    public DeploymentValidateResult setError(ManagementError error) {
        this.error = error;
        return this;
    }

    /**
     * Get the properties property: The template deployment properties.
     *
     * @return the properties value.
     */
    public DeploymentPropertiesExtended getProperties() {
        return this.properties;
    }

    /**
     * Set the properties property: The template deployment properties.
     *
     * @param properties the properties value to set.
     * @return the DeploymentValidateResult object itself.
     */
    public DeploymentValidateResult setProperties(DeploymentPropertiesExtended properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getProperties() != null) {
            getProperties().validate();
        }
    }
}
