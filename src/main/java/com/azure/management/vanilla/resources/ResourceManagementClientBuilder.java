// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.resources;

import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.AzureEnvironment;
import com.azure.management.vanilla.resources.implementation.ResourceManagementClientImpl;

/** A builder for creating a new instance of the ResourceManagementClientImpl type. */
@ServiceClientBuilder(
    serviceClients = {
        OperationsAsyncClient.class,
        DeploymentsAsyncClient.class,
        ProvidersAsyncClient.class,
        ResourcesAsyncClient.class,
        ResourceGroupsAsyncClient.class,
        TagsAsyncClient.class,
        DeploymentOperationsAsyncClient.class,
        OperationsClient.class,
        DeploymentsClient.class,
        ProvidersClient.class,
        ResourcesClient.class,
        ResourceGroupsClient.class,
        TagsClient.class,
        DeploymentOperationsClient.class
    })
public final class ResourceManagementClientBuilder {
    /*
     * The ID of the target subscription.
     */
    private String subscriptionId;

    /**
     * Sets The ID of the target subscription.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the ResourceManagementClientBuilder.
     */
    public ResourceManagementClientBuilder subscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /*
     * server parameter
     */
    private String host;

    /**
     * Sets server parameter.
     *
     * @param host the host value.
     * @return the ResourceManagementClientBuilder.
     */
    public ResourceManagementClientBuilder host(String host) {
        this.host = host;
        return this;
    }

    /*
     * Api Version
     */
    private String apiVersion;

    /**
     * Sets Api Version.
     *
     * @param apiVersion the apiVersion value.
     * @return the ResourceManagementClientBuilder.
     */
    public ResourceManagementClientBuilder apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /*
     * The environment to connect to
     */
    private AzureEnvironment environment;

    /**
     * Sets The environment to connect to.
     *
     * @param environment the environment value.
     * @return the ResourceManagementClientBuilder.
     */
    public ResourceManagementClientBuilder environment(AzureEnvironment environment) {
        this.environment = environment;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the ResourceManagementClientBuilder.
     */
    public ResourceManagementClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of ResourceManagementClientImpl with the provided parameters.
     *
     * @return an instance of ResourceManagementClientImpl.
     */
    private ResourceManagementClientImpl buildInnerClient() {
        if (host == null) {
            this.host = "https://management.azure.com";
        }
        if (apiVersion == null) {
            this.apiVersion = "2019-08-01";
        }
        if (environment == null) {
            this.environment = AzureEnvironment.AZURE;
        }
        if (pipeline == null) {
            this.pipeline =
                new HttpPipelineBuilder()
                    .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                    .build();
        }
        ResourceManagementClientImpl client = new ResourceManagementClientImpl(pipeline, environment);
        client.setSubscriptionId(this.subscriptionId);
        client.setHost(this.host);
        client.setApiVersion(this.apiVersion);
        return client;
    }

    /**
     * Builds an instance of OperationsAsyncClient async client.
     *
     * @return an instance of OperationsAsyncClient.
     */
    public OperationsAsyncClient buildOperationsAsyncClient() {
        return new OperationsAsyncClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of DeploymentsAsyncClient async client.
     *
     * @return an instance of DeploymentsAsyncClient.
     */
    public DeploymentsAsyncClient buildDeploymentsAsyncClient() {
        return new DeploymentsAsyncClient(buildInnerClient().getDeployments());
    }

    /**
     * Builds an instance of ProvidersAsyncClient async client.
     *
     * @return an instance of ProvidersAsyncClient.
     */
    public ProvidersAsyncClient buildProvidersAsyncClient() {
        return new ProvidersAsyncClient(buildInnerClient().getProviders());
    }

    /**
     * Builds an instance of ResourcesAsyncClient async client.
     *
     * @return an instance of ResourcesAsyncClient.
     */
    public ResourcesAsyncClient buildResourcesAsyncClient() {
        return new ResourcesAsyncClient(buildInnerClient().getResources());
    }

    /**
     * Builds an instance of ResourceGroupsAsyncClient async client.
     *
     * @return an instance of ResourceGroupsAsyncClient.
     */
    public ResourceGroupsAsyncClient buildResourceGroupsAsyncClient() {
        return new ResourceGroupsAsyncClient(buildInnerClient().getResourceGroups());
    }

    /**
     * Builds an instance of TagsAsyncClient async client.
     *
     * @return an instance of TagsAsyncClient.
     */
    public TagsAsyncClient buildTagsAsyncClient() {
        return new TagsAsyncClient(buildInnerClient().getTags());
    }

    /**
     * Builds an instance of DeploymentOperationsAsyncClient async client.
     *
     * @return an instance of DeploymentOperationsAsyncClient.
     */
    public DeploymentOperationsAsyncClient buildDeploymentOperationsAsyncClient() {
        return new DeploymentOperationsAsyncClient(buildInnerClient().getDeploymentOperations());
    }

    /**
     * Builds an instance of OperationsClient sync client.
     *
     * @return an instance of OperationsClient.
     */
    public OperationsClient buildOperationsClient() {
        return new OperationsClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of DeploymentsClient sync client.
     *
     * @return an instance of DeploymentsClient.
     */
    public DeploymentsClient buildDeploymentsClient() {
        return new DeploymentsClient(buildInnerClient().getDeployments());
    }

    /**
     * Builds an instance of ProvidersClient sync client.
     *
     * @return an instance of ProvidersClient.
     */
    public ProvidersClient buildProvidersClient() {
        return new ProvidersClient(buildInnerClient().getProviders());
    }

    /**
     * Builds an instance of ResourcesClient sync client.
     *
     * @return an instance of ResourcesClient.
     */
    public ResourcesClient buildResourcesClient() {
        return new ResourcesClient(buildInnerClient().getResources());
    }

    /**
     * Builds an instance of ResourceGroupsClient sync client.
     *
     * @return an instance of ResourceGroupsClient.
     */
    public ResourceGroupsClient buildResourceGroupsClient() {
        return new ResourceGroupsClient(buildInnerClient().getResourceGroups());
    }

    /**
     * Builds an instance of TagsClient sync client.
     *
     * @return an instance of TagsClient.
     */
    public TagsClient buildTagsClient() {
        return new TagsClient(buildInnerClient().getTags());
    }

    /**
     * Builds an instance of DeploymentOperationsClient sync client.
     *
     * @return an instance of DeploymentOperationsClient.
     */
    public DeploymentOperationsClient buildDeploymentOperationsClient() {
        return new DeploymentOperationsClient(buildInnerClient().getDeploymentOperations());
    }
}
