// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.network.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The SecurityRuleAssociations model. */
@Fluent
public final class SecurityRuleAssociations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SecurityRuleAssociations.class);

    /*
     * Network interface and it's custom security rules.
     */
    @JsonProperty(value = "networkInterfaceAssociation")
    private NetworkInterfaceAssociation networkInterfaceAssociation;

    /*
     * Subnet and it's custom security rules.
     */
    @JsonProperty(value = "subnetAssociation")
    private SubnetAssociation subnetAssociation;

    /*
     * Collection of default security rules of the network security group.
     */
    @JsonProperty(value = "defaultSecurityRules")
    private List<SecurityRule> defaultSecurityRules;

    /*
     * Collection of effective security rules.
     */
    @JsonProperty(value = "effectiveSecurityRules")
    private List<EffectiveNetworkSecurityRule> effectiveSecurityRules;

    /**
     * Get the networkInterfaceAssociation property: Network interface and it's custom security rules.
     *
     * @return the networkInterfaceAssociation value.
     */
    public NetworkInterfaceAssociation getNetworkInterfaceAssociation() {
        return this.networkInterfaceAssociation;
    }

    /**
     * Set the networkInterfaceAssociation property: Network interface and it's custom security rules.
     *
     * @param networkInterfaceAssociation the networkInterfaceAssociation value to set.
     * @return the SecurityRuleAssociations object itself.
     */
    public SecurityRuleAssociations setNetworkInterfaceAssociation(
        NetworkInterfaceAssociation networkInterfaceAssociation) {
        this.networkInterfaceAssociation = networkInterfaceAssociation;
        return this;
    }

    /**
     * Get the subnetAssociation property: Subnet and it's custom security rules.
     *
     * @return the subnetAssociation value.
     */
    public SubnetAssociation getSubnetAssociation() {
        return this.subnetAssociation;
    }

    /**
     * Set the subnetAssociation property: Subnet and it's custom security rules.
     *
     * @param subnetAssociation the subnetAssociation value to set.
     * @return the SecurityRuleAssociations object itself.
     */
    public SecurityRuleAssociations setSubnetAssociation(SubnetAssociation subnetAssociation) {
        this.subnetAssociation = subnetAssociation;
        return this;
    }

    /**
     * Get the defaultSecurityRules property: Collection of default security rules of the network security group.
     *
     * @return the defaultSecurityRules value.
     */
    public List<SecurityRule> getDefaultSecurityRules() {
        return this.defaultSecurityRules;
    }

    /**
     * Set the defaultSecurityRules property: Collection of default security rules of the network security group.
     *
     * @param defaultSecurityRules the defaultSecurityRules value to set.
     * @return the SecurityRuleAssociations object itself.
     */
    public SecurityRuleAssociations setDefaultSecurityRules(List<SecurityRule> defaultSecurityRules) {
        this.defaultSecurityRules = defaultSecurityRules;
        return this;
    }

    /**
     * Get the effectiveSecurityRules property: Collection of effective security rules.
     *
     * @return the effectiveSecurityRules value.
     */
    public List<EffectiveNetworkSecurityRule> getEffectiveSecurityRules() {
        return this.effectiveSecurityRules;
    }

    /**
     * Set the effectiveSecurityRules property: Collection of effective security rules.
     *
     * @param effectiveSecurityRules the effectiveSecurityRules value to set.
     * @return the SecurityRuleAssociations object itself.
     */
    public SecurityRuleAssociations setEffectiveSecurityRules(
        List<EffectiveNetworkSecurityRule> effectiveSecurityRules) {
        this.effectiveSecurityRules = effectiveSecurityRules;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (getNetworkInterfaceAssociation() != null) {
            getNetworkInterfaceAssociation().validate();
        }
        if (getSubnetAssociation() != null) {
            getSubnetAssociation().validate();
        }
        if (getDefaultSecurityRules() != null) {
            getDefaultSecurityRules().forEach(e -> e.validate());
        }
        if (getEffectiveSecurityRules() != null) {
            getEffectiveSecurityRules().forEach(e -> e.validate());
        }
    }
}
