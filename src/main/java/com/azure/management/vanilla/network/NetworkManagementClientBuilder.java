// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.vanilla.network;

import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.AzureEnvironment;
import com.azure.management.vanilla.network.implementation.NetworkManagementClientImpl;

/** A builder for creating a new instance of the NetworkManagementClientImpl type. */
@ServiceClientBuilder(
    serviceClients = {
        NetworkManagementAsyncClient.class,
        ApplicationGatewaysAsyncClient.class,
        ApplicationSecurityGroupsAsyncClient.class,
        AvailableDelegationsAsyncClient.class,
        AvailableResourceGroupDelegationsAsyncClient.class,
        AvailableServiceAliasesAsyncClient.class,
        AzureFirewallsAsyncClient.class,
        AzureFirewallFqdnTagsAsyncClient.class,
        BastionHostsAsyncClient.class,
        DdosCustomPoliciesAsyncClient.class,
        DdosProtectionPlansAsyncClient.class,
        AvailableEndpointServicesAsyncClient.class,
        ExpressRouteCircuitAuthorizationsAsyncClient.class,
        ExpressRouteCircuitPeeringsAsyncClient.class,
        ExpressRouteCircuitConnectionsAsyncClient.class,
        PeerExpressRouteCircuitConnectionsAsyncClient.class,
        ExpressRouteCircuitsAsyncClient.class,
        ExpressRouteServiceProvidersAsyncClient.class,
        ExpressRouteCrossConnectionsAsyncClient.class,
        ExpressRouteCrossConnectionPeeringsAsyncClient.class,
        ExpressRoutePortsLocationsAsyncClient.class,
        ExpressRoutePortsAsyncClient.class,
        ExpressRouteLinksAsyncClient.class,
        FirewallPoliciesAsyncClient.class,
        FirewallPolicyRuleGroupsAsyncClient.class,
        IpAllocationsAsyncClient.class,
        IpGroupsAsyncClient.class,
        LoadBalancersAsyncClient.class,
        LoadBalancerBackendAddressPoolsAsyncClient.class,
        LoadBalancerFrontendIpConfigurationsAsyncClient.class,
        InboundNatRulesAsyncClient.class,
        LoadBalancerLoadBalancingRulesAsyncClient.class,
        LoadBalancerOutboundRulesAsyncClient.class,
        LoadBalancerNetworkInterfacesAsyncClient.class,
        LoadBalancerProbesAsyncClient.class,
        NatGatewaysAsyncClient.class,
        NetworkInterfacesAsyncClient.class,
        NetworkInterfaceIpConfigurationsAsyncClient.class,
        NetworkInterfaceLoadBalancersAsyncClient.class,
        NetworkInterfaceTapConfigurationsAsyncClient.class,
        NetworkProfilesAsyncClient.class,
        NetworkSecurityGroupsAsyncClient.class,
        SecurityRulesAsyncClient.class,
        DefaultSecurityRulesAsyncClient.class,
        NetworkVirtualAppliancesAsyncClient.class,
        NetworkWatchersAsyncClient.class,
        PacketCapturesAsyncClient.class,
        ConnectionMonitorsAsyncClient.class,
        FlowLogsAsyncClient.class,
        OperationsAsyncClient.class,
        PrivateEndpointsAsyncClient.class,
        AvailablePrivateEndpointTypesAsyncClient.class,
        PrivateDnsZoneGroupsAsyncClient.class,
        PrivateLinkServicesAsyncClient.class,
        PublicIpAddressesAsyncClient.class,
        PublicIpPrefixesAsyncClient.class,
        RouteFiltersAsyncClient.class,
        RouteFilterRulesAsyncClient.class,
        RouteTablesAsyncClient.class,
        RoutesAsyncClient.class,
        SecurityPartnerProvidersAsyncClient.class,
        BgpServiceCommunitiesAsyncClient.class,
        ServiceEndpointPoliciesAsyncClient.class,
        ServiceEndpointPolicyDefinitionsAsyncClient.class,
        ServiceTagsAsyncClient.class,
        UsagesAsyncClient.class,
        VirtualNetworksAsyncClient.class,
        SubnetsAsyncClient.class,
        ResourceNavigationLinksAsyncClient.class,
        ServiceAssociationLinksAsyncClient.class,
        VirtualNetworkPeeringsAsyncClient.class,
        VirtualNetworkGatewaysAsyncClient.class,
        VirtualNetworkGatewayConnectionsAsyncClient.class,
        LocalNetworkGatewaysAsyncClient.class,
        VirtualNetworkTapsAsyncClient.class,
        VirtualRoutersAsyncClient.class,
        VirtualRouterPeeringsAsyncClient.class,
        VirtualWansAsyncClient.class,
        VpnSitesAsyncClient.class,
        VpnSiteLinksAsyncClient.class,
        VpnSitesConfigurationAsyncClient.class,
        VpnServerConfigurationsAsyncClient.class,
        VirtualHubsAsyncClient.class,
        HubVirtualNetworkConnectionsAsyncClient.class,
        VpnGatewaysAsyncClient.class,
        VpnConnectionsAsyncClient.class,
        VpnSiteLinkConnectionsAsyncClient.class,
        VpnLinkConnectionsAsyncClient.class,
        P2SVpnGatewaysAsyncClient.class,
        VpnServerConfigurationsAssociatedWithVirtualWanAsyncClient.class,
        VirtualHubRouteTableV2SAsyncClient.class,
        ExpressRouteGatewaysAsyncClient.class,
        ExpressRouteConnectionsAsyncClient.class,
        HubRouteTablesAsyncClient.class,
        WebApplicationFirewallPoliciesAsyncClient.class,
        NetworkManagementClient.class,
        ApplicationGatewaysClient.class,
        ApplicationSecurityGroupsClient.class,
        AvailableDelegationsClient.class,
        AvailableResourceGroupDelegationsClient.class,
        AvailableServiceAliasesClient.class,
        AzureFirewallsClient.class,
        AzureFirewallFqdnTagsClient.class,
        BastionHostsClient.class,
        DdosCustomPoliciesClient.class,
        DdosProtectionPlansClient.class,
        AvailableEndpointServicesClient.class,
        ExpressRouteCircuitAuthorizationsClient.class,
        ExpressRouteCircuitPeeringsClient.class,
        ExpressRouteCircuitConnectionsClient.class,
        PeerExpressRouteCircuitConnectionsClient.class,
        ExpressRouteCircuitsClient.class,
        ExpressRouteServiceProvidersClient.class,
        ExpressRouteCrossConnectionsClient.class,
        ExpressRouteCrossConnectionPeeringsClient.class,
        ExpressRoutePortsLocationsClient.class,
        ExpressRoutePortsClient.class,
        ExpressRouteLinksClient.class,
        FirewallPoliciesClient.class,
        FirewallPolicyRuleGroupsClient.class,
        IpAllocationsClient.class,
        IpGroupsClient.class,
        LoadBalancersClient.class,
        LoadBalancerBackendAddressPoolsClient.class,
        LoadBalancerFrontendIpConfigurationsClient.class,
        InboundNatRulesClient.class,
        LoadBalancerLoadBalancingRulesClient.class,
        LoadBalancerOutboundRulesClient.class,
        LoadBalancerNetworkInterfacesClient.class,
        LoadBalancerProbesClient.class,
        NatGatewaysClient.class,
        NetworkInterfacesClient.class,
        NetworkInterfaceIpConfigurationsClient.class,
        NetworkInterfaceLoadBalancersClient.class,
        NetworkInterfaceTapConfigurationsClient.class,
        NetworkProfilesClient.class,
        NetworkSecurityGroupsClient.class,
        SecurityRulesClient.class,
        DefaultSecurityRulesClient.class,
        NetworkVirtualAppliancesClient.class,
        NetworkWatchersClient.class,
        PacketCapturesClient.class,
        ConnectionMonitorsClient.class,
        FlowLogsClient.class,
        OperationsClient.class,
        PrivateEndpointsClient.class,
        AvailablePrivateEndpointTypesClient.class,
        PrivateDnsZoneGroupsClient.class,
        PrivateLinkServicesClient.class,
        PublicIpAddressesClient.class,
        PublicIpPrefixesClient.class,
        RouteFiltersClient.class,
        RouteFilterRulesClient.class,
        RouteTablesClient.class,
        RoutesClient.class,
        SecurityPartnerProvidersClient.class,
        BgpServiceCommunitiesClient.class,
        ServiceEndpointPoliciesClient.class,
        ServiceEndpointPolicyDefinitionsClient.class,
        ServiceTagsClient.class,
        UsagesClient.class,
        VirtualNetworksClient.class,
        SubnetsClient.class,
        ResourceNavigationLinksClient.class,
        ServiceAssociationLinksClient.class,
        VirtualNetworkPeeringsClient.class,
        VirtualNetworkGatewaysClient.class,
        VirtualNetworkGatewayConnectionsClient.class,
        LocalNetworkGatewaysClient.class,
        VirtualNetworkTapsClient.class,
        VirtualRoutersClient.class,
        VirtualRouterPeeringsClient.class,
        VirtualWansClient.class,
        VpnSitesClient.class,
        VpnSiteLinksClient.class,
        VpnSitesConfigurationClient.class,
        VpnServerConfigurationsClient.class,
        VirtualHubsClient.class,
        HubVirtualNetworkConnectionsClient.class,
        VpnGatewaysClient.class,
        VpnConnectionsClient.class,
        VpnSiteLinkConnectionsClient.class,
        VpnLinkConnectionsClient.class,
        P2SVpnGatewaysClient.class,
        VpnServerConfigurationsAssociatedWithVirtualWanClient.class,
        VirtualHubRouteTableV2SClient.class,
        ExpressRouteGatewaysClient.class,
        ExpressRouteConnectionsClient.class,
        HubRouteTablesClient.class,
        WebApplicationFirewallPoliciesClient.class
    })
public final class NetworkManagementClientBuilder {
    /*
     * The subscription credentials which uniquely identify the Microsoft Azure
     * subscription. The subscription ID forms part of the URI for every
     * service call.
     */
    private String subscriptionId;

    /**
     * Sets The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID
     * forms part of the URI for every service call.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the NetworkManagementClientBuilder.
     */
    public NetworkManagementClientBuilder subscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /*
     * server parameter
     */
    private String host;

    /**
     * Sets server parameter.
     *
     * @param host the host value.
     * @return the NetworkManagementClientBuilder.
     */
    public NetworkManagementClientBuilder host(String host) {
        this.host = host;
        return this;
    }

    /*
     * The environment to connect to
     */
    private AzureEnvironment environment;

    /**
     * Sets The environment to connect to.
     *
     * @param environment the environment value.
     * @return the NetworkManagementClientBuilder.
     */
    public NetworkManagementClientBuilder environment(AzureEnvironment environment) {
        this.environment = environment;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the NetworkManagementClientBuilder.
     */
    public NetworkManagementClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of NetworkManagementClientImpl with the provided parameters.
     *
     * @return an instance of NetworkManagementClientImpl.
     */
    private NetworkManagementClientImpl buildInnerClient() {
        if (host == null) {
            this.host = "https://management.azure.com";
        }
        if (environment == null) {
            this.environment = AzureEnvironment.AZURE;
        }
        if (pipeline == null) {
            this.pipeline =
                new HttpPipelineBuilder()
                    .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())
                    .build();
        }
        NetworkManagementClientImpl client = new NetworkManagementClientImpl(pipeline, environment);
        client.setSubscriptionId(this.subscriptionId);
        client.setHost(this.host);
        return client;
    }

    /**
     * Builds an instance of NetworkManagementAsyncClient async client.
     *
     * @return an instance of NetworkManagementAsyncClient.
     */
    public NetworkManagementAsyncClient buildNetworkManagementAsyncClient() {
        return new NetworkManagementAsyncClient(buildInnerClient());
    }

    /**
     * Builds an instance of ApplicationGatewaysAsyncClient async client.
     *
     * @return an instance of ApplicationGatewaysAsyncClient.
     */
    public ApplicationGatewaysAsyncClient buildApplicationGatewaysAsyncClient() {
        return new ApplicationGatewaysAsyncClient(buildInnerClient().getApplicationGateways());
    }

    /**
     * Builds an instance of ApplicationSecurityGroupsAsyncClient async client.
     *
     * @return an instance of ApplicationSecurityGroupsAsyncClient.
     */
    public ApplicationSecurityGroupsAsyncClient buildApplicationSecurityGroupsAsyncClient() {
        return new ApplicationSecurityGroupsAsyncClient(buildInnerClient().getApplicationSecurityGroups());
    }

    /**
     * Builds an instance of AvailableDelegationsAsyncClient async client.
     *
     * @return an instance of AvailableDelegationsAsyncClient.
     */
    public AvailableDelegationsAsyncClient buildAvailableDelegationsAsyncClient() {
        return new AvailableDelegationsAsyncClient(buildInnerClient().getAvailableDelegations());
    }

    /**
     * Builds an instance of AvailableResourceGroupDelegationsAsyncClient async client.
     *
     * @return an instance of AvailableResourceGroupDelegationsAsyncClient.
     */
    public AvailableResourceGroupDelegationsAsyncClient buildAvailableResourceGroupDelegationsAsyncClient() {
        return new AvailableResourceGroupDelegationsAsyncClient(
            buildInnerClient().getAvailableResourceGroupDelegations());
    }

    /**
     * Builds an instance of AvailableServiceAliasesAsyncClient async client.
     *
     * @return an instance of AvailableServiceAliasesAsyncClient.
     */
    public AvailableServiceAliasesAsyncClient buildAvailableServiceAliasesAsyncClient() {
        return new AvailableServiceAliasesAsyncClient(buildInnerClient().getAvailableServiceAliases());
    }

    /**
     * Builds an instance of AzureFirewallsAsyncClient async client.
     *
     * @return an instance of AzureFirewallsAsyncClient.
     */
    public AzureFirewallsAsyncClient buildAzureFirewallsAsyncClient() {
        return new AzureFirewallsAsyncClient(buildInnerClient().getAzureFirewalls());
    }

    /**
     * Builds an instance of AzureFirewallFqdnTagsAsyncClient async client.
     *
     * @return an instance of AzureFirewallFqdnTagsAsyncClient.
     */
    public AzureFirewallFqdnTagsAsyncClient buildAzureFirewallFqdnTagsAsyncClient() {
        return new AzureFirewallFqdnTagsAsyncClient(buildInnerClient().getAzureFirewallFqdnTags());
    }

    /**
     * Builds an instance of BastionHostsAsyncClient async client.
     *
     * @return an instance of BastionHostsAsyncClient.
     */
    public BastionHostsAsyncClient buildBastionHostsAsyncClient() {
        return new BastionHostsAsyncClient(buildInnerClient().getBastionHosts());
    }

    /**
     * Builds an instance of DdosCustomPoliciesAsyncClient async client.
     *
     * @return an instance of DdosCustomPoliciesAsyncClient.
     */
    public DdosCustomPoliciesAsyncClient buildDdosCustomPoliciesAsyncClient() {
        return new DdosCustomPoliciesAsyncClient(buildInnerClient().getDdosCustomPolicies());
    }

    /**
     * Builds an instance of DdosProtectionPlansAsyncClient async client.
     *
     * @return an instance of DdosProtectionPlansAsyncClient.
     */
    public DdosProtectionPlansAsyncClient buildDdosProtectionPlansAsyncClient() {
        return new DdosProtectionPlansAsyncClient(buildInnerClient().getDdosProtectionPlans());
    }

    /**
     * Builds an instance of AvailableEndpointServicesAsyncClient async client.
     *
     * @return an instance of AvailableEndpointServicesAsyncClient.
     */
    public AvailableEndpointServicesAsyncClient buildAvailableEndpointServicesAsyncClient() {
        return new AvailableEndpointServicesAsyncClient(buildInnerClient().getAvailableEndpointServices());
    }

    /**
     * Builds an instance of ExpressRouteCircuitAuthorizationsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCircuitAuthorizationsAsyncClient.
     */
    public ExpressRouteCircuitAuthorizationsAsyncClient buildExpressRouteCircuitAuthorizationsAsyncClient() {
        return new ExpressRouteCircuitAuthorizationsAsyncClient(
            buildInnerClient().getExpressRouteCircuitAuthorizations());
    }

    /**
     * Builds an instance of ExpressRouteCircuitPeeringsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCircuitPeeringsAsyncClient.
     */
    public ExpressRouteCircuitPeeringsAsyncClient buildExpressRouteCircuitPeeringsAsyncClient() {
        return new ExpressRouteCircuitPeeringsAsyncClient(buildInnerClient().getExpressRouteCircuitPeerings());
    }

    /**
     * Builds an instance of ExpressRouteCircuitConnectionsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCircuitConnectionsAsyncClient.
     */
    public ExpressRouteCircuitConnectionsAsyncClient buildExpressRouteCircuitConnectionsAsyncClient() {
        return new ExpressRouteCircuitConnectionsAsyncClient(buildInnerClient().getExpressRouteCircuitConnections());
    }

    /**
     * Builds an instance of PeerExpressRouteCircuitConnectionsAsyncClient async client.
     *
     * @return an instance of PeerExpressRouteCircuitConnectionsAsyncClient.
     */
    public PeerExpressRouteCircuitConnectionsAsyncClient buildPeerExpressRouteCircuitConnectionsAsyncClient() {
        return new PeerExpressRouteCircuitConnectionsAsyncClient(
            buildInnerClient().getPeerExpressRouteCircuitConnections());
    }

    /**
     * Builds an instance of ExpressRouteCircuitsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCircuitsAsyncClient.
     */
    public ExpressRouteCircuitsAsyncClient buildExpressRouteCircuitsAsyncClient() {
        return new ExpressRouteCircuitsAsyncClient(buildInnerClient().getExpressRouteCircuits());
    }

    /**
     * Builds an instance of ExpressRouteServiceProvidersAsyncClient async client.
     *
     * @return an instance of ExpressRouteServiceProvidersAsyncClient.
     */
    public ExpressRouteServiceProvidersAsyncClient buildExpressRouteServiceProvidersAsyncClient() {
        return new ExpressRouteServiceProvidersAsyncClient(buildInnerClient().getExpressRouteServiceProviders());
    }

    /**
     * Builds an instance of ExpressRouteCrossConnectionsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCrossConnectionsAsyncClient.
     */
    public ExpressRouteCrossConnectionsAsyncClient buildExpressRouteCrossConnectionsAsyncClient() {
        return new ExpressRouteCrossConnectionsAsyncClient(buildInnerClient().getExpressRouteCrossConnections());
    }

    /**
     * Builds an instance of ExpressRouteCrossConnectionPeeringsAsyncClient async client.
     *
     * @return an instance of ExpressRouteCrossConnectionPeeringsAsyncClient.
     */
    public ExpressRouteCrossConnectionPeeringsAsyncClient buildExpressRouteCrossConnectionPeeringsAsyncClient() {
        return new ExpressRouteCrossConnectionPeeringsAsyncClient(
            buildInnerClient().getExpressRouteCrossConnectionPeerings());
    }

    /**
     * Builds an instance of ExpressRoutePortsLocationsAsyncClient async client.
     *
     * @return an instance of ExpressRoutePortsLocationsAsyncClient.
     */
    public ExpressRoutePortsLocationsAsyncClient buildExpressRoutePortsLocationsAsyncClient() {
        return new ExpressRoutePortsLocationsAsyncClient(buildInnerClient().getExpressRoutePortsLocations());
    }

    /**
     * Builds an instance of ExpressRoutePortsAsyncClient async client.
     *
     * @return an instance of ExpressRoutePortsAsyncClient.
     */
    public ExpressRoutePortsAsyncClient buildExpressRoutePortsAsyncClient() {
        return new ExpressRoutePortsAsyncClient(buildInnerClient().getExpressRoutePorts());
    }

    /**
     * Builds an instance of ExpressRouteLinksAsyncClient async client.
     *
     * @return an instance of ExpressRouteLinksAsyncClient.
     */
    public ExpressRouteLinksAsyncClient buildExpressRouteLinksAsyncClient() {
        return new ExpressRouteLinksAsyncClient(buildInnerClient().getExpressRouteLinks());
    }

    /**
     * Builds an instance of FirewallPoliciesAsyncClient async client.
     *
     * @return an instance of FirewallPoliciesAsyncClient.
     */
    public FirewallPoliciesAsyncClient buildFirewallPoliciesAsyncClient() {
        return new FirewallPoliciesAsyncClient(buildInnerClient().getFirewallPolicies());
    }

    /**
     * Builds an instance of FirewallPolicyRuleGroupsAsyncClient async client.
     *
     * @return an instance of FirewallPolicyRuleGroupsAsyncClient.
     */
    public FirewallPolicyRuleGroupsAsyncClient buildFirewallPolicyRuleGroupsAsyncClient() {
        return new FirewallPolicyRuleGroupsAsyncClient(buildInnerClient().getFirewallPolicyRuleGroups());
    }

    /**
     * Builds an instance of IpAllocationsAsyncClient async client.
     *
     * @return an instance of IpAllocationsAsyncClient.
     */
    public IpAllocationsAsyncClient buildIpAllocationsAsyncClient() {
        return new IpAllocationsAsyncClient(buildInnerClient().getIpAllocations());
    }

    /**
     * Builds an instance of IpGroupsAsyncClient async client.
     *
     * @return an instance of IpGroupsAsyncClient.
     */
    public IpGroupsAsyncClient buildIpGroupsAsyncClient() {
        return new IpGroupsAsyncClient(buildInnerClient().getIpGroups());
    }

    /**
     * Builds an instance of LoadBalancersAsyncClient async client.
     *
     * @return an instance of LoadBalancersAsyncClient.
     */
    public LoadBalancersAsyncClient buildLoadBalancersAsyncClient() {
        return new LoadBalancersAsyncClient(buildInnerClient().getLoadBalancers());
    }

    /**
     * Builds an instance of LoadBalancerBackendAddressPoolsAsyncClient async client.
     *
     * @return an instance of LoadBalancerBackendAddressPoolsAsyncClient.
     */
    public LoadBalancerBackendAddressPoolsAsyncClient buildLoadBalancerBackendAddressPoolsAsyncClient() {
        return new LoadBalancerBackendAddressPoolsAsyncClient(buildInnerClient().getLoadBalancerBackendAddressPools());
    }

    /**
     * Builds an instance of LoadBalancerFrontendIpConfigurationsAsyncClient async client.
     *
     * @return an instance of LoadBalancerFrontendIpConfigurationsAsyncClient.
     */
    public LoadBalancerFrontendIpConfigurationsAsyncClient buildLoadBalancerFrontendIpConfigurationsAsyncClient() {
        return new LoadBalancerFrontendIpConfigurationsAsyncClient(
            buildInnerClient().getLoadBalancerFrontendIpConfigurations());
    }

    /**
     * Builds an instance of InboundNatRulesAsyncClient async client.
     *
     * @return an instance of InboundNatRulesAsyncClient.
     */
    public InboundNatRulesAsyncClient buildInboundNatRulesAsyncClient() {
        return new InboundNatRulesAsyncClient(buildInnerClient().getInboundNatRules());
    }

    /**
     * Builds an instance of LoadBalancerLoadBalancingRulesAsyncClient async client.
     *
     * @return an instance of LoadBalancerLoadBalancingRulesAsyncClient.
     */
    public LoadBalancerLoadBalancingRulesAsyncClient buildLoadBalancerLoadBalancingRulesAsyncClient() {
        return new LoadBalancerLoadBalancingRulesAsyncClient(buildInnerClient().getLoadBalancerLoadBalancingRules());
    }

    /**
     * Builds an instance of LoadBalancerOutboundRulesAsyncClient async client.
     *
     * @return an instance of LoadBalancerOutboundRulesAsyncClient.
     */
    public LoadBalancerOutboundRulesAsyncClient buildLoadBalancerOutboundRulesAsyncClient() {
        return new LoadBalancerOutboundRulesAsyncClient(buildInnerClient().getLoadBalancerOutboundRules());
    }

    /**
     * Builds an instance of LoadBalancerNetworkInterfacesAsyncClient async client.
     *
     * @return an instance of LoadBalancerNetworkInterfacesAsyncClient.
     */
    public LoadBalancerNetworkInterfacesAsyncClient buildLoadBalancerNetworkInterfacesAsyncClient() {
        return new LoadBalancerNetworkInterfacesAsyncClient(buildInnerClient().getLoadBalancerNetworkInterfaces());
    }

    /**
     * Builds an instance of LoadBalancerProbesAsyncClient async client.
     *
     * @return an instance of LoadBalancerProbesAsyncClient.
     */
    public LoadBalancerProbesAsyncClient buildLoadBalancerProbesAsyncClient() {
        return new LoadBalancerProbesAsyncClient(buildInnerClient().getLoadBalancerProbes());
    }

    /**
     * Builds an instance of NatGatewaysAsyncClient async client.
     *
     * @return an instance of NatGatewaysAsyncClient.
     */
    public NatGatewaysAsyncClient buildNatGatewaysAsyncClient() {
        return new NatGatewaysAsyncClient(buildInnerClient().getNatGateways());
    }

    /**
     * Builds an instance of NetworkInterfacesAsyncClient async client.
     *
     * @return an instance of NetworkInterfacesAsyncClient.
     */
    public NetworkInterfacesAsyncClient buildNetworkInterfacesAsyncClient() {
        return new NetworkInterfacesAsyncClient(buildInnerClient().getNetworkInterfaces());
    }

    /**
     * Builds an instance of NetworkInterfaceIpConfigurationsAsyncClient async client.
     *
     * @return an instance of NetworkInterfaceIpConfigurationsAsyncClient.
     */
    public NetworkInterfaceIpConfigurationsAsyncClient buildNetworkInterfaceIpConfigurationsAsyncClient() {
        return new NetworkInterfaceIpConfigurationsAsyncClient(
            buildInnerClient().getNetworkInterfaceIpConfigurations());
    }

    /**
     * Builds an instance of NetworkInterfaceLoadBalancersAsyncClient async client.
     *
     * @return an instance of NetworkInterfaceLoadBalancersAsyncClient.
     */
    public NetworkInterfaceLoadBalancersAsyncClient buildNetworkInterfaceLoadBalancersAsyncClient() {
        return new NetworkInterfaceLoadBalancersAsyncClient(buildInnerClient().getNetworkInterfaceLoadBalancers());
    }

    /**
     * Builds an instance of NetworkInterfaceTapConfigurationsAsyncClient async client.
     *
     * @return an instance of NetworkInterfaceTapConfigurationsAsyncClient.
     */
    public NetworkInterfaceTapConfigurationsAsyncClient buildNetworkInterfaceTapConfigurationsAsyncClient() {
        return new NetworkInterfaceTapConfigurationsAsyncClient(
            buildInnerClient().getNetworkInterfaceTapConfigurations());
    }

    /**
     * Builds an instance of NetworkProfilesAsyncClient async client.
     *
     * @return an instance of NetworkProfilesAsyncClient.
     */
    public NetworkProfilesAsyncClient buildNetworkProfilesAsyncClient() {
        return new NetworkProfilesAsyncClient(buildInnerClient().getNetworkProfiles());
    }

    /**
     * Builds an instance of NetworkSecurityGroupsAsyncClient async client.
     *
     * @return an instance of NetworkSecurityGroupsAsyncClient.
     */
    public NetworkSecurityGroupsAsyncClient buildNetworkSecurityGroupsAsyncClient() {
        return new NetworkSecurityGroupsAsyncClient(buildInnerClient().getNetworkSecurityGroups());
    }

    /**
     * Builds an instance of SecurityRulesAsyncClient async client.
     *
     * @return an instance of SecurityRulesAsyncClient.
     */
    public SecurityRulesAsyncClient buildSecurityRulesAsyncClient() {
        return new SecurityRulesAsyncClient(buildInnerClient().getSecurityRules());
    }

    /**
     * Builds an instance of DefaultSecurityRulesAsyncClient async client.
     *
     * @return an instance of DefaultSecurityRulesAsyncClient.
     */
    public DefaultSecurityRulesAsyncClient buildDefaultSecurityRulesAsyncClient() {
        return new DefaultSecurityRulesAsyncClient(buildInnerClient().getDefaultSecurityRules());
    }

    /**
     * Builds an instance of NetworkVirtualAppliancesAsyncClient async client.
     *
     * @return an instance of NetworkVirtualAppliancesAsyncClient.
     */
    public NetworkVirtualAppliancesAsyncClient buildNetworkVirtualAppliancesAsyncClient() {
        return new NetworkVirtualAppliancesAsyncClient(buildInnerClient().getNetworkVirtualAppliances());
    }

    /**
     * Builds an instance of NetworkWatchersAsyncClient async client.
     *
     * @return an instance of NetworkWatchersAsyncClient.
     */
    public NetworkWatchersAsyncClient buildNetworkWatchersAsyncClient() {
        return new NetworkWatchersAsyncClient(buildInnerClient().getNetworkWatchers());
    }

    /**
     * Builds an instance of PacketCapturesAsyncClient async client.
     *
     * @return an instance of PacketCapturesAsyncClient.
     */
    public PacketCapturesAsyncClient buildPacketCapturesAsyncClient() {
        return new PacketCapturesAsyncClient(buildInnerClient().getPacketCaptures());
    }

    /**
     * Builds an instance of ConnectionMonitorsAsyncClient async client.
     *
     * @return an instance of ConnectionMonitorsAsyncClient.
     */
    public ConnectionMonitorsAsyncClient buildConnectionMonitorsAsyncClient() {
        return new ConnectionMonitorsAsyncClient(buildInnerClient().getConnectionMonitors());
    }

    /**
     * Builds an instance of FlowLogsAsyncClient async client.
     *
     * @return an instance of FlowLogsAsyncClient.
     */
    public FlowLogsAsyncClient buildFlowLogsAsyncClient() {
        return new FlowLogsAsyncClient(buildInnerClient().getFlowLogs());
    }

    /**
     * Builds an instance of OperationsAsyncClient async client.
     *
     * @return an instance of OperationsAsyncClient.
     */
    public OperationsAsyncClient buildOperationsAsyncClient() {
        return new OperationsAsyncClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of PrivateEndpointsAsyncClient async client.
     *
     * @return an instance of PrivateEndpointsAsyncClient.
     */
    public PrivateEndpointsAsyncClient buildPrivateEndpointsAsyncClient() {
        return new PrivateEndpointsAsyncClient(buildInnerClient().getPrivateEndpoints());
    }

    /**
     * Builds an instance of AvailablePrivateEndpointTypesAsyncClient async client.
     *
     * @return an instance of AvailablePrivateEndpointTypesAsyncClient.
     */
    public AvailablePrivateEndpointTypesAsyncClient buildAvailablePrivateEndpointTypesAsyncClient() {
        return new AvailablePrivateEndpointTypesAsyncClient(buildInnerClient().getAvailablePrivateEndpointTypes());
    }

    /**
     * Builds an instance of PrivateDnsZoneGroupsAsyncClient async client.
     *
     * @return an instance of PrivateDnsZoneGroupsAsyncClient.
     */
    public PrivateDnsZoneGroupsAsyncClient buildPrivateDnsZoneGroupsAsyncClient() {
        return new PrivateDnsZoneGroupsAsyncClient(buildInnerClient().getPrivateDnsZoneGroups());
    }

    /**
     * Builds an instance of PrivateLinkServicesAsyncClient async client.
     *
     * @return an instance of PrivateLinkServicesAsyncClient.
     */
    public PrivateLinkServicesAsyncClient buildPrivateLinkServicesAsyncClient() {
        return new PrivateLinkServicesAsyncClient(buildInnerClient().getPrivateLinkServices());
    }

    /**
     * Builds an instance of PublicIpAddressesAsyncClient async client.
     *
     * @return an instance of PublicIpAddressesAsyncClient.
     */
    public PublicIpAddressesAsyncClient buildPublicIpAddressesAsyncClient() {
        return new PublicIpAddressesAsyncClient(buildInnerClient().getPublicIpAddresses());
    }

    /**
     * Builds an instance of PublicIpPrefixesAsyncClient async client.
     *
     * @return an instance of PublicIpPrefixesAsyncClient.
     */
    public PublicIpPrefixesAsyncClient buildPublicIpPrefixesAsyncClient() {
        return new PublicIpPrefixesAsyncClient(buildInnerClient().getPublicIpPrefixes());
    }

    /**
     * Builds an instance of RouteFiltersAsyncClient async client.
     *
     * @return an instance of RouteFiltersAsyncClient.
     */
    public RouteFiltersAsyncClient buildRouteFiltersAsyncClient() {
        return new RouteFiltersAsyncClient(buildInnerClient().getRouteFilters());
    }

    /**
     * Builds an instance of RouteFilterRulesAsyncClient async client.
     *
     * @return an instance of RouteFilterRulesAsyncClient.
     */
    public RouteFilterRulesAsyncClient buildRouteFilterRulesAsyncClient() {
        return new RouteFilterRulesAsyncClient(buildInnerClient().getRouteFilterRules());
    }

    /**
     * Builds an instance of RouteTablesAsyncClient async client.
     *
     * @return an instance of RouteTablesAsyncClient.
     */
    public RouteTablesAsyncClient buildRouteTablesAsyncClient() {
        return new RouteTablesAsyncClient(buildInnerClient().getRouteTables());
    }

    /**
     * Builds an instance of RoutesAsyncClient async client.
     *
     * @return an instance of RoutesAsyncClient.
     */
    public RoutesAsyncClient buildRoutesAsyncClient() {
        return new RoutesAsyncClient(buildInnerClient().getRoutes());
    }

    /**
     * Builds an instance of SecurityPartnerProvidersAsyncClient async client.
     *
     * @return an instance of SecurityPartnerProvidersAsyncClient.
     */
    public SecurityPartnerProvidersAsyncClient buildSecurityPartnerProvidersAsyncClient() {
        return new SecurityPartnerProvidersAsyncClient(buildInnerClient().getSecurityPartnerProviders());
    }

    /**
     * Builds an instance of BgpServiceCommunitiesAsyncClient async client.
     *
     * @return an instance of BgpServiceCommunitiesAsyncClient.
     */
    public BgpServiceCommunitiesAsyncClient buildBgpServiceCommunitiesAsyncClient() {
        return new BgpServiceCommunitiesAsyncClient(buildInnerClient().getBgpServiceCommunities());
    }

    /**
     * Builds an instance of ServiceEndpointPoliciesAsyncClient async client.
     *
     * @return an instance of ServiceEndpointPoliciesAsyncClient.
     */
    public ServiceEndpointPoliciesAsyncClient buildServiceEndpointPoliciesAsyncClient() {
        return new ServiceEndpointPoliciesAsyncClient(buildInnerClient().getServiceEndpointPolicies());
    }

    /**
     * Builds an instance of ServiceEndpointPolicyDefinitionsAsyncClient async client.
     *
     * @return an instance of ServiceEndpointPolicyDefinitionsAsyncClient.
     */
    public ServiceEndpointPolicyDefinitionsAsyncClient buildServiceEndpointPolicyDefinitionsAsyncClient() {
        return new ServiceEndpointPolicyDefinitionsAsyncClient(
            buildInnerClient().getServiceEndpointPolicyDefinitions());
    }

    /**
     * Builds an instance of ServiceTagsAsyncClient async client.
     *
     * @return an instance of ServiceTagsAsyncClient.
     */
    public ServiceTagsAsyncClient buildServiceTagsAsyncClient() {
        return new ServiceTagsAsyncClient(buildInnerClient().getServiceTags());
    }

    /**
     * Builds an instance of UsagesAsyncClient async client.
     *
     * @return an instance of UsagesAsyncClient.
     */
    public UsagesAsyncClient buildUsagesAsyncClient() {
        return new UsagesAsyncClient(buildInnerClient().getUsages());
    }

    /**
     * Builds an instance of VirtualNetworksAsyncClient async client.
     *
     * @return an instance of VirtualNetworksAsyncClient.
     */
    public VirtualNetworksAsyncClient buildVirtualNetworksAsyncClient() {
        return new VirtualNetworksAsyncClient(buildInnerClient().getVirtualNetworks());
    }

    /**
     * Builds an instance of SubnetsAsyncClient async client.
     *
     * @return an instance of SubnetsAsyncClient.
     */
    public SubnetsAsyncClient buildSubnetsAsyncClient() {
        return new SubnetsAsyncClient(buildInnerClient().getSubnets());
    }

    /**
     * Builds an instance of ResourceNavigationLinksAsyncClient async client.
     *
     * @return an instance of ResourceNavigationLinksAsyncClient.
     */
    public ResourceNavigationLinksAsyncClient buildResourceNavigationLinksAsyncClient() {
        return new ResourceNavigationLinksAsyncClient(buildInnerClient().getResourceNavigationLinks());
    }

    /**
     * Builds an instance of ServiceAssociationLinksAsyncClient async client.
     *
     * @return an instance of ServiceAssociationLinksAsyncClient.
     */
    public ServiceAssociationLinksAsyncClient buildServiceAssociationLinksAsyncClient() {
        return new ServiceAssociationLinksAsyncClient(buildInnerClient().getServiceAssociationLinks());
    }

    /**
     * Builds an instance of VirtualNetworkPeeringsAsyncClient async client.
     *
     * @return an instance of VirtualNetworkPeeringsAsyncClient.
     */
    public VirtualNetworkPeeringsAsyncClient buildVirtualNetworkPeeringsAsyncClient() {
        return new VirtualNetworkPeeringsAsyncClient(buildInnerClient().getVirtualNetworkPeerings());
    }

    /**
     * Builds an instance of VirtualNetworkGatewaysAsyncClient async client.
     *
     * @return an instance of VirtualNetworkGatewaysAsyncClient.
     */
    public VirtualNetworkGatewaysAsyncClient buildVirtualNetworkGatewaysAsyncClient() {
        return new VirtualNetworkGatewaysAsyncClient(buildInnerClient().getVirtualNetworkGateways());
    }

    /**
     * Builds an instance of VirtualNetworkGatewayConnectionsAsyncClient async client.
     *
     * @return an instance of VirtualNetworkGatewayConnectionsAsyncClient.
     */
    public VirtualNetworkGatewayConnectionsAsyncClient buildVirtualNetworkGatewayConnectionsAsyncClient() {
        return new VirtualNetworkGatewayConnectionsAsyncClient(
            buildInnerClient().getVirtualNetworkGatewayConnections());
    }

    /**
     * Builds an instance of LocalNetworkGatewaysAsyncClient async client.
     *
     * @return an instance of LocalNetworkGatewaysAsyncClient.
     */
    public LocalNetworkGatewaysAsyncClient buildLocalNetworkGatewaysAsyncClient() {
        return new LocalNetworkGatewaysAsyncClient(buildInnerClient().getLocalNetworkGateways());
    }

    /**
     * Builds an instance of VirtualNetworkTapsAsyncClient async client.
     *
     * @return an instance of VirtualNetworkTapsAsyncClient.
     */
    public VirtualNetworkTapsAsyncClient buildVirtualNetworkTapsAsyncClient() {
        return new VirtualNetworkTapsAsyncClient(buildInnerClient().getVirtualNetworkTaps());
    }

    /**
     * Builds an instance of VirtualRoutersAsyncClient async client.
     *
     * @return an instance of VirtualRoutersAsyncClient.
     */
    public VirtualRoutersAsyncClient buildVirtualRoutersAsyncClient() {
        return new VirtualRoutersAsyncClient(buildInnerClient().getVirtualRouters());
    }

    /**
     * Builds an instance of VirtualRouterPeeringsAsyncClient async client.
     *
     * @return an instance of VirtualRouterPeeringsAsyncClient.
     */
    public VirtualRouterPeeringsAsyncClient buildVirtualRouterPeeringsAsyncClient() {
        return new VirtualRouterPeeringsAsyncClient(buildInnerClient().getVirtualRouterPeerings());
    }

    /**
     * Builds an instance of VirtualWansAsyncClient async client.
     *
     * @return an instance of VirtualWansAsyncClient.
     */
    public VirtualWansAsyncClient buildVirtualWansAsyncClient() {
        return new VirtualWansAsyncClient(buildInnerClient().getVirtualWans());
    }

    /**
     * Builds an instance of VpnSitesAsyncClient async client.
     *
     * @return an instance of VpnSitesAsyncClient.
     */
    public VpnSitesAsyncClient buildVpnSitesAsyncClient() {
        return new VpnSitesAsyncClient(buildInnerClient().getVpnSites());
    }

    /**
     * Builds an instance of VpnSiteLinksAsyncClient async client.
     *
     * @return an instance of VpnSiteLinksAsyncClient.
     */
    public VpnSiteLinksAsyncClient buildVpnSiteLinksAsyncClient() {
        return new VpnSiteLinksAsyncClient(buildInnerClient().getVpnSiteLinks());
    }

    /**
     * Builds an instance of VpnSitesConfigurationAsyncClient async client.
     *
     * @return an instance of VpnSitesConfigurationAsyncClient.
     */
    public VpnSitesConfigurationAsyncClient buildVpnSitesConfigurationAsyncClient() {
        return new VpnSitesConfigurationAsyncClient(buildInnerClient().getVpnSitesConfigurations());
    }

    /**
     * Builds an instance of VpnServerConfigurationsAsyncClient async client.
     *
     * @return an instance of VpnServerConfigurationsAsyncClient.
     */
    public VpnServerConfigurationsAsyncClient buildVpnServerConfigurationsAsyncClient() {
        return new VpnServerConfigurationsAsyncClient(buildInnerClient().getVpnServerConfigurations());
    }

    /**
     * Builds an instance of VirtualHubsAsyncClient async client.
     *
     * @return an instance of VirtualHubsAsyncClient.
     */
    public VirtualHubsAsyncClient buildVirtualHubsAsyncClient() {
        return new VirtualHubsAsyncClient(buildInnerClient().getVirtualHubs());
    }

    /**
     * Builds an instance of HubVirtualNetworkConnectionsAsyncClient async client.
     *
     * @return an instance of HubVirtualNetworkConnectionsAsyncClient.
     */
    public HubVirtualNetworkConnectionsAsyncClient buildHubVirtualNetworkConnectionsAsyncClient() {
        return new HubVirtualNetworkConnectionsAsyncClient(buildInnerClient().getHubVirtualNetworkConnections());
    }

    /**
     * Builds an instance of VpnGatewaysAsyncClient async client.
     *
     * @return an instance of VpnGatewaysAsyncClient.
     */
    public VpnGatewaysAsyncClient buildVpnGatewaysAsyncClient() {
        return new VpnGatewaysAsyncClient(buildInnerClient().getVpnGateways());
    }

    /**
     * Builds an instance of VpnConnectionsAsyncClient async client.
     *
     * @return an instance of VpnConnectionsAsyncClient.
     */
    public VpnConnectionsAsyncClient buildVpnConnectionsAsyncClient() {
        return new VpnConnectionsAsyncClient(buildInnerClient().getVpnConnections());
    }

    /**
     * Builds an instance of VpnSiteLinkConnectionsAsyncClient async client.
     *
     * @return an instance of VpnSiteLinkConnectionsAsyncClient.
     */
    public VpnSiteLinkConnectionsAsyncClient buildVpnSiteLinkConnectionsAsyncClient() {
        return new VpnSiteLinkConnectionsAsyncClient(buildInnerClient().getVpnSiteLinkConnections());
    }

    /**
     * Builds an instance of VpnLinkConnectionsAsyncClient async client.
     *
     * @return an instance of VpnLinkConnectionsAsyncClient.
     */
    public VpnLinkConnectionsAsyncClient buildVpnLinkConnectionsAsyncClient() {
        return new VpnLinkConnectionsAsyncClient(buildInnerClient().getVpnLinkConnections());
    }

    /**
     * Builds an instance of P2SVpnGatewaysAsyncClient async client.
     *
     * @return an instance of P2SVpnGatewaysAsyncClient.
     */
    public P2SVpnGatewaysAsyncClient buildP2SVpnGatewaysAsyncClient() {
        return new P2SVpnGatewaysAsyncClient(buildInnerClient().getP2SVpnGateways());
    }

    /**
     * Builds an instance of VpnServerConfigurationsAssociatedWithVirtualWanAsyncClient async client.
     *
     * @return an instance of VpnServerConfigurationsAssociatedWithVirtualWanAsyncClient.
     */
    public VpnServerConfigurationsAssociatedWithVirtualWanAsyncClient
        buildVpnServerConfigurationsAssociatedWithVirtualWanAsyncClient() {
        return new VpnServerConfigurationsAssociatedWithVirtualWanAsyncClient(
            buildInnerClient().getVpnServerConfigurationsAssociatedWithVirtualWans());
    }

    /**
     * Builds an instance of VirtualHubRouteTableV2SAsyncClient async client.
     *
     * @return an instance of VirtualHubRouteTableV2SAsyncClient.
     */
    public VirtualHubRouteTableV2SAsyncClient buildVirtualHubRouteTableV2SAsyncClient() {
        return new VirtualHubRouteTableV2SAsyncClient(buildInnerClient().getVirtualHubRouteTableV2S());
    }

    /**
     * Builds an instance of ExpressRouteGatewaysAsyncClient async client.
     *
     * @return an instance of ExpressRouteGatewaysAsyncClient.
     */
    public ExpressRouteGatewaysAsyncClient buildExpressRouteGatewaysAsyncClient() {
        return new ExpressRouteGatewaysAsyncClient(buildInnerClient().getExpressRouteGateways());
    }

    /**
     * Builds an instance of ExpressRouteConnectionsAsyncClient async client.
     *
     * @return an instance of ExpressRouteConnectionsAsyncClient.
     */
    public ExpressRouteConnectionsAsyncClient buildExpressRouteConnectionsAsyncClient() {
        return new ExpressRouteConnectionsAsyncClient(buildInnerClient().getExpressRouteConnections());
    }

    /**
     * Builds an instance of HubRouteTablesAsyncClient async client.
     *
     * @return an instance of HubRouteTablesAsyncClient.
     */
    public HubRouteTablesAsyncClient buildHubRouteTablesAsyncClient() {
        return new HubRouteTablesAsyncClient(buildInnerClient().getHubRouteTables());
    }

    /**
     * Builds an instance of WebApplicationFirewallPoliciesAsyncClient async client.
     *
     * @return an instance of WebApplicationFirewallPoliciesAsyncClient.
     */
    public WebApplicationFirewallPoliciesAsyncClient buildWebApplicationFirewallPoliciesAsyncClient() {
        return new WebApplicationFirewallPoliciesAsyncClient(buildInnerClient().getWebApplicationFirewallPolicies());
    }

    /**
     * Builds an instance of NetworkManagementClient sync client.
     *
     * @return an instance of NetworkManagementClient.
     */
    public NetworkManagementClient buildNetworkManagementClient() {
        return new NetworkManagementClient(buildInnerClient());
    }

    /**
     * Builds an instance of ApplicationGatewaysClient sync client.
     *
     * @return an instance of ApplicationGatewaysClient.
     */
    public ApplicationGatewaysClient buildApplicationGatewaysClient() {
        return new ApplicationGatewaysClient(buildInnerClient().getApplicationGateways());
    }

    /**
     * Builds an instance of ApplicationSecurityGroupsClient sync client.
     *
     * @return an instance of ApplicationSecurityGroupsClient.
     */
    public ApplicationSecurityGroupsClient buildApplicationSecurityGroupsClient() {
        return new ApplicationSecurityGroupsClient(buildInnerClient().getApplicationSecurityGroups());
    }

    /**
     * Builds an instance of AvailableDelegationsClient sync client.
     *
     * @return an instance of AvailableDelegationsClient.
     */
    public AvailableDelegationsClient buildAvailableDelegationsClient() {
        return new AvailableDelegationsClient(buildInnerClient().getAvailableDelegations());
    }

    /**
     * Builds an instance of AvailableResourceGroupDelegationsClient sync client.
     *
     * @return an instance of AvailableResourceGroupDelegationsClient.
     */
    public AvailableResourceGroupDelegationsClient buildAvailableResourceGroupDelegationsClient() {
        return new AvailableResourceGroupDelegationsClient(buildInnerClient().getAvailableResourceGroupDelegations());
    }

    /**
     * Builds an instance of AvailableServiceAliasesClient sync client.
     *
     * @return an instance of AvailableServiceAliasesClient.
     */
    public AvailableServiceAliasesClient buildAvailableServiceAliasesClient() {
        return new AvailableServiceAliasesClient(buildInnerClient().getAvailableServiceAliases());
    }

    /**
     * Builds an instance of AzureFirewallsClient sync client.
     *
     * @return an instance of AzureFirewallsClient.
     */
    public AzureFirewallsClient buildAzureFirewallsClient() {
        return new AzureFirewallsClient(buildInnerClient().getAzureFirewalls());
    }

    /**
     * Builds an instance of AzureFirewallFqdnTagsClient sync client.
     *
     * @return an instance of AzureFirewallFqdnTagsClient.
     */
    public AzureFirewallFqdnTagsClient buildAzureFirewallFqdnTagsClient() {
        return new AzureFirewallFqdnTagsClient(buildInnerClient().getAzureFirewallFqdnTags());
    }

    /**
     * Builds an instance of BastionHostsClient sync client.
     *
     * @return an instance of BastionHostsClient.
     */
    public BastionHostsClient buildBastionHostsClient() {
        return new BastionHostsClient(buildInnerClient().getBastionHosts());
    }

    /**
     * Builds an instance of DdosCustomPoliciesClient sync client.
     *
     * @return an instance of DdosCustomPoliciesClient.
     */
    public DdosCustomPoliciesClient buildDdosCustomPoliciesClient() {
        return new DdosCustomPoliciesClient(buildInnerClient().getDdosCustomPolicies());
    }

    /**
     * Builds an instance of DdosProtectionPlansClient sync client.
     *
     * @return an instance of DdosProtectionPlansClient.
     */
    public DdosProtectionPlansClient buildDdosProtectionPlansClient() {
        return new DdosProtectionPlansClient(buildInnerClient().getDdosProtectionPlans());
    }

    /**
     * Builds an instance of AvailableEndpointServicesClient sync client.
     *
     * @return an instance of AvailableEndpointServicesClient.
     */
    public AvailableEndpointServicesClient buildAvailableEndpointServicesClient() {
        return new AvailableEndpointServicesClient(buildInnerClient().getAvailableEndpointServices());
    }

    /**
     * Builds an instance of ExpressRouteCircuitAuthorizationsClient sync client.
     *
     * @return an instance of ExpressRouteCircuitAuthorizationsClient.
     */
    public ExpressRouteCircuitAuthorizationsClient buildExpressRouteCircuitAuthorizationsClient() {
        return new ExpressRouteCircuitAuthorizationsClient(buildInnerClient().getExpressRouteCircuitAuthorizations());
    }

    /**
     * Builds an instance of ExpressRouteCircuitPeeringsClient sync client.
     *
     * @return an instance of ExpressRouteCircuitPeeringsClient.
     */
    public ExpressRouteCircuitPeeringsClient buildExpressRouteCircuitPeeringsClient() {
        return new ExpressRouteCircuitPeeringsClient(buildInnerClient().getExpressRouteCircuitPeerings());
    }

    /**
     * Builds an instance of ExpressRouteCircuitConnectionsClient sync client.
     *
     * @return an instance of ExpressRouteCircuitConnectionsClient.
     */
    public ExpressRouteCircuitConnectionsClient buildExpressRouteCircuitConnectionsClient() {
        return new ExpressRouteCircuitConnectionsClient(buildInnerClient().getExpressRouteCircuitConnections());
    }

    /**
     * Builds an instance of PeerExpressRouteCircuitConnectionsClient sync client.
     *
     * @return an instance of PeerExpressRouteCircuitConnectionsClient.
     */
    public PeerExpressRouteCircuitConnectionsClient buildPeerExpressRouteCircuitConnectionsClient() {
        return new PeerExpressRouteCircuitConnectionsClient(buildInnerClient().getPeerExpressRouteCircuitConnections());
    }

    /**
     * Builds an instance of ExpressRouteCircuitsClient sync client.
     *
     * @return an instance of ExpressRouteCircuitsClient.
     */
    public ExpressRouteCircuitsClient buildExpressRouteCircuitsClient() {
        return new ExpressRouteCircuitsClient(buildInnerClient().getExpressRouteCircuits());
    }

    /**
     * Builds an instance of ExpressRouteServiceProvidersClient sync client.
     *
     * @return an instance of ExpressRouteServiceProvidersClient.
     */
    public ExpressRouteServiceProvidersClient buildExpressRouteServiceProvidersClient() {
        return new ExpressRouteServiceProvidersClient(buildInnerClient().getExpressRouteServiceProviders());
    }

    /**
     * Builds an instance of ExpressRouteCrossConnectionsClient sync client.
     *
     * @return an instance of ExpressRouteCrossConnectionsClient.
     */
    public ExpressRouteCrossConnectionsClient buildExpressRouteCrossConnectionsClient() {
        return new ExpressRouteCrossConnectionsClient(buildInnerClient().getExpressRouteCrossConnections());
    }

    /**
     * Builds an instance of ExpressRouteCrossConnectionPeeringsClient sync client.
     *
     * @return an instance of ExpressRouteCrossConnectionPeeringsClient.
     */
    public ExpressRouteCrossConnectionPeeringsClient buildExpressRouteCrossConnectionPeeringsClient() {
        return new ExpressRouteCrossConnectionPeeringsClient(
            buildInnerClient().getExpressRouteCrossConnectionPeerings());
    }

    /**
     * Builds an instance of ExpressRoutePortsLocationsClient sync client.
     *
     * @return an instance of ExpressRoutePortsLocationsClient.
     */
    public ExpressRoutePortsLocationsClient buildExpressRoutePortsLocationsClient() {
        return new ExpressRoutePortsLocationsClient(buildInnerClient().getExpressRoutePortsLocations());
    }

    /**
     * Builds an instance of ExpressRoutePortsClient sync client.
     *
     * @return an instance of ExpressRoutePortsClient.
     */
    public ExpressRoutePortsClient buildExpressRoutePortsClient() {
        return new ExpressRoutePortsClient(buildInnerClient().getExpressRoutePorts());
    }

    /**
     * Builds an instance of ExpressRouteLinksClient sync client.
     *
     * @return an instance of ExpressRouteLinksClient.
     */
    public ExpressRouteLinksClient buildExpressRouteLinksClient() {
        return new ExpressRouteLinksClient(buildInnerClient().getExpressRouteLinks());
    }

    /**
     * Builds an instance of FirewallPoliciesClient sync client.
     *
     * @return an instance of FirewallPoliciesClient.
     */
    public FirewallPoliciesClient buildFirewallPoliciesClient() {
        return new FirewallPoliciesClient(buildInnerClient().getFirewallPolicies());
    }

    /**
     * Builds an instance of FirewallPolicyRuleGroupsClient sync client.
     *
     * @return an instance of FirewallPolicyRuleGroupsClient.
     */
    public FirewallPolicyRuleGroupsClient buildFirewallPolicyRuleGroupsClient() {
        return new FirewallPolicyRuleGroupsClient(buildInnerClient().getFirewallPolicyRuleGroups());
    }

    /**
     * Builds an instance of IpAllocationsClient sync client.
     *
     * @return an instance of IpAllocationsClient.
     */
    public IpAllocationsClient buildIpAllocationsClient() {
        return new IpAllocationsClient(buildInnerClient().getIpAllocations());
    }

    /**
     * Builds an instance of IpGroupsClient sync client.
     *
     * @return an instance of IpGroupsClient.
     */
    public IpGroupsClient buildIpGroupsClient() {
        return new IpGroupsClient(buildInnerClient().getIpGroups());
    }

    /**
     * Builds an instance of LoadBalancersClient sync client.
     *
     * @return an instance of LoadBalancersClient.
     */
    public LoadBalancersClient buildLoadBalancersClient() {
        return new LoadBalancersClient(buildInnerClient().getLoadBalancers());
    }

    /**
     * Builds an instance of LoadBalancerBackendAddressPoolsClient sync client.
     *
     * @return an instance of LoadBalancerBackendAddressPoolsClient.
     */
    public LoadBalancerBackendAddressPoolsClient buildLoadBalancerBackendAddressPoolsClient() {
        return new LoadBalancerBackendAddressPoolsClient(buildInnerClient().getLoadBalancerBackendAddressPools());
    }

    /**
     * Builds an instance of LoadBalancerFrontendIpConfigurationsClient sync client.
     *
     * @return an instance of LoadBalancerFrontendIpConfigurationsClient.
     */
    public LoadBalancerFrontendIpConfigurationsClient buildLoadBalancerFrontendIpConfigurationsClient() {
        return new LoadBalancerFrontendIpConfigurationsClient(
            buildInnerClient().getLoadBalancerFrontendIpConfigurations());
    }

    /**
     * Builds an instance of InboundNatRulesClient sync client.
     *
     * @return an instance of InboundNatRulesClient.
     */
    public InboundNatRulesClient buildInboundNatRulesClient() {
        return new InboundNatRulesClient(buildInnerClient().getInboundNatRules());
    }

    /**
     * Builds an instance of LoadBalancerLoadBalancingRulesClient sync client.
     *
     * @return an instance of LoadBalancerLoadBalancingRulesClient.
     */
    public LoadBalancerLoadBalancingRulesClient buildLoadBalancerLoadBalancingRulesClient() {
        return new LoadBalancerLoadBalancingRulesClient(buildInnerClient().getLoadBalancerLoadBalancingRules());
    }

    /**
     * Builds an instance of LoadBalancerOutboundRulesClient sync client.
     *
     * @return an instance of LoadBalancerOutboundRulesClient.
     */
    public LoadBalancerOutboundRulesClient buildLoadBalancerOutboundRulesClient() {
        return new LoadBalancerOutboundRulesClient(buildInnerClient().getLoadBalancerOutboundRules());
    }

    /**
     * Builds an instance of LoadBalancerNetworkInterfacesClient sync client.
     *
     * @return an instance of LoadBalancerNetworkInterfacesClient.
     */
    public LoadBalancerNetworkInterfacesClient buildLoadBalancerNetworkInterfacesClient() {
        return new LoadBalancerNetworkInterfacesClient(buildInnerClient().getLoadBalancerNetworkInterfaces());
    }

    /**
     * Builds an instance of LoadBalancerProbesClient sync client.
     *
     * @return an instance of LoadBalancerProbesClient.
     */
    public LoadBalancerProbesClient buildLoadBalancerProbesClient() {
        return new LoadBalancerProbesClient(buildInnerClient().getLoadBalancerProbes());
    }

    /**
     * Builds an instance of NatGatewaysClient sync client.
     *
     * @return an instance of NatGatewaysClient.
     */
    public NatGatewaysClient buildNatGatewaysClient() {
        return new NatGatewaysClient(buildInnerClient().getNatGateways());
    }

    /**
     * Builds an instance of NetworkInterfacesClient sync client.
     *
     * @return an instance of NetworkInterfacesClient.
     */
    public NetworkInterfacesClient buildNetworkInterfacesClient() {
        return new NetworkInterfacesClient(buildInnerClient().getNetworkInterfaces());
    }

    /**
     * Builds an instance of NetworkInterfaceIpConfigurationsClient sync client.
     *
     * @return an instance of NetworkInterfaceIpConfigurationsClient.
     */
    public NetworkInterfaceIpConfigurationsClient buildNetworkInterfaceIpConfigurationsClient() {
        return new NetworkInterfaceIpConfigurationsClient(buildInnerClient().getNetworkInterfaceIpConfigurations());
    }

    /**
     * Builds an instance of NetworkInterfaceLoadBalancersClient sync client.
     *
     * @return an instance of NetworkInterfaceLoadBalancersClient.
     */
    public NetworkInterfaceLoadBalancersClient buildNetworkInterfaceLoadBalancersClient() {
        return new NetworkInterfaceLoadBalancersClient(buildInnerClient().getNetworkInterfaceLoadBalancers());
    }

    /**
     * Builds an instance of NetworkInterfaceTapConfigurationsClient sync client.
     *
     * @return an instance of NetworkInterfaceTapConfigurationsClient.
     */
    public NetworkInterfaceTapConfigurationsClient buildNetworkInterfaceTapConfigurationsClient() {
        return new NetworkInterfaceTapConfigurationsClient(buildInnerClient().getNetworkInterfaceTapConfigurations());
    }

    /**
     * Builds an instance of NetworkProfilesClient sync client.
     *
     * @return an instance of NetworkProfilesClient.
     */
    public NetworkProfilesClient buildNetworkProfilesClient() {
        return new NetworkProfilesClient(buildInnerClient().getNetworkProfiles());
    }

    /**
     * Builds an instance of NetworkSecurityGroupsClient sync client.
     *
     * @return an instance of NetworkSecurityGroupsClient.
     */
    public NetworkSecurityGroupsClient buildNetworkSecurityGroupsClient() {
        return new NetworkSecurityGroupsClient(buildInnerClient().getNetworkSecurityGroups());
    }

    /**
     * Builds an instance of SecurityRulesClient sync client.
     *
     * @return an instance of SecurityRulesClient.
     */
    public SecurityRulesClient buildSecurityRulesClient() {
        return new SecurityRulesClient(buildInnerClient().getSecurityRules());
    }

    /**
     * Builds an instance of DefaultSecurityRulesClient sync client.
     *
     * @return an instance of DefaultSecurityRulesClient.
     */
    public DefaultSecurityRulesClient buildDefaultSecurityRulesClient() {
        return new DefaultSecurityRulesClient(buildInnerClient().getDefaultSecurityRules());
    }

    /**
     * Builds an instance of NetworkVirtualAppliancesClient sync client.
     *
     * @return an instance of NetworkVirtualAppliancesClient.
     */
    public NetworkVirtualAppliancesClient buildNetworkVirtualAppliancesClient() {
        return new NetworkVirtualAppliancesClient(buildInnerClient().getNetworkVirtualAppliances());
    }

    /**
     * Builds an instance of NetworkWatchersClient sync client.
     *
     * @return an instance of NetworkWatchersClient.
     */
    public NetworkWatchersClient buildNetworkWatchersClient() {
        return new NetworkWatchersClient(buildInnerClient().getNetworkWatchers());
    }

    /**
     * Builds an instance of PacketCapturesClient sync client.
     *
     * @return an instance of PacketCapturesClient.
     */
    public PacketCapturesClient buildPacketCapturesClient() {
        return new PacketCapturesClient(buildInnerClient().getPacketCaptures());
    }

    /**
     * Builds an instance of ConnectionMonitorsClient sync client.
     *
     * @return an instance of ConnectionMonitorsClient.
     */
    public ConnectionMonitorsClient buildConnectionMonitorsClient() {
        return new ConnectionMonitorsClient(buildInnerClient().getConnectionMonitors());
    }

    /**
     * Builds an instance of FlowLogsClient sync client.
     *
     * @return an instance of FlowLogsClient.
     */
    public FlowLogsClient buildFlowLogsClient() {
        return new FlowLogsClient(buildInnerClient().getFlowLogs());
    }

    /**
     * Builds an instance of OperationsClient sync client.
     *
     * @return an instance of OperationsClient.
     */
    public OperationsClient buildOperationsClient() {
        return new OperationsClient(buildInnerClient().getOperations());
    }

    /**
     * Builds an instance of PrivateEndpointsClient sync client.
     *
     * @return an instance of PrivateEndpointsClient.
     */
    public PrivateEndpointsClient buildPrivateEndpointsClient() {
        return new PrivateEndpointsClient(buildInnerClient().getPrivateEndpoints());
    }

    /**
     * Builds an instance of AvailablePrivateEndpointTypesClient sync client.
     *
     * @return an instance of AvailablePrivateEndpointTypesClient.
     */
    public AvailablePrivateEndpointTypesClient buildAvailablePrivateEndpointTypesClient() {
        return new AvailablePrivateEndpointTypesClient(buildInnerClient().getAvailablePrivateEndpointTypes());
    }

    /**
     * Builds an instance of PrivateDnsZoneGroupsClient sync client.
     *
     * @return an instance of PrivateDnsZoneGroupsClient.
     */
    public PrivateDnsZoneGroupsClient buildPrivateDnsZoneGroupsClient() {
        return new PrivateDnsZoneGroupsClient(buildInnerClient().getPrivateDnsZoneGroups());
    }

    /**
     * Builds an instance of PrivateLinkServicesClient sync client.
     *
     * @return an instance of PrivateLinkServicesClient.
     */
    public PrivateLinkServicesClient buildPrivateLinkServicesClient() {
        return new PrivateLinkServicesClient(buildInnerClient().getPrivateLinkServices());
    }

    /**
     * Builds an instance of PublicIpAddressesClient sync client.
     *
     * @return an instance of PublicIpAddressesClient.
     */
    public PublicIpAddressesClient buildPublicIpAddressesClient() {
        return new PublicIpAddressesClient(buildInnerClient().getPublicIpAddresses());
    }

    /**
     * Builds an instance of PublicIpPrefixesClient sync client.
     *
     * @return an instance of PublicIpPrefixesClient.
     */
    public PublicIpPrefixesClient buildPublicIpPrefixesClient() {
        return new PublicIpPrefixesClient(buildInnerClient().getPublicIpPrefixes());
    }

    /**
     * Builds an instance of RouteFiltersClient sync client.
     *
     * @return an instance of RouteFiltersClient.
     */
    public RouteFiltersClient buildRouteFiltersClient() {
        return new RouteFiltersClient(buildInnerClient().getRouteFilters());
    }

    /**
     * Builds an instance of RouteFilterRulesClient sync client.
     *
     * @return an instance of RouteFilterRulesClient.
     */
    public RouteFilterRulesClient buildRouteFilterRulesClient() {
        return new RouteFilterRulesClient(buildInnerClient().getRouteFilterRules());
    }

    /**
     * Builds an instance of RouteTablesClient sync client.
     *
     * @return an instance of RouteTablesClient.
     */
    public RouteTablesClient buildRouteTablesClient() {
        return new RouteTablesClient(buildInnerClient().getRouteTables());
    }

    /**
     * Builds an instance of RoutesClient sync client.
     *
     * @return an instance of RoutesClient.
     */
    public RoutesClient buildRoutesClient() {
        return new RoutesClient(buildInnerClient().getRoutes());
    }

    /**
     * Builds an instance of SecurityPartnerProvidersClient sync client.
     *
     * @return an instance of SecurityPartnerProvidersClient.
     */
    public SecurityPartnerProvidersClient buildSecurityPartnerProvidersClient() {
        return new SecurityPartnerProvidersClient(buildInnerClient().getSecurityPartnerProviders());
    }

    /**
     * Builds an instance of BgpServiceCommunitiesClient sync client.
     *
     * @return an instance of BgpServiceCommunitiesClient.
     */
    public BgpServiceCommunitiesClient buildBgpServiceCommunitiesClient() {
        return new BgpServiceCommunitiesClient(buildInnerClient().getBgpServiceCommunities());
    }

    /**
     * Builds an instance of ServiceEndpointPoliciesClient sync client.
     *
     * @return an instance of ServiceEndpointPoliciesClient.
     */
    public ServiceEndpointPoliciesClient buildServiceEndpointPoliciesClient() {
        return new ServiceEndpointPoliciesClient(buildInnerClient().getServiceEndpointPolicies());
    }

    /**
     * Builds an instance of ServiceEndpointPolicyDefinitionsClient sync client.
     *
     * @return an instance of ServiceEndpointPolicyDefinitionsClient.
     */
    public ServiceEndpointPolicyDefinitionsClient buildServiceEndpointPolicyDefinitionsClient() {
        return new ServiceEndpointPolicyDefinitionsClient(buildInnerClient().getServiceEndpointPolicyDefinitions());
    }

    /**
     * Builds an instance of ServiceTagsClient sync client.
     *
     * @return an instance of ServiceTagsClient.
     */
    public ServiceTagsClient buildServiceTagsClient() {
        return new ServiceTagsClient(buildInnerClient().getServiceTags());
    }

    /**
     * Builds an instance of UsagesClient sync client.
     *
     * @return an instance of UsagesClient.
     */
    public UsagesClient buildUsagesClient() {
        return new UsagesClient(buildInnerClient().getUsages());
    }

    /**
     * Builds an instance of VirtualNetworksClient sync client.
     *
     * @return an instance of VirtualNetworksClient.
     */
    public VirtualNetworksClient buildVirtualNetworksClient() {
        return new VirtualNetworksClient(buildInnerClient().getVirtualNetworks());
    }

    /**
     * Builds an instance of SubnetsClient sync client.
     *
     * @return an instance of SubnetsClient.
     */
    public SubnetsClient buildSubnetsClient() {
        return new SubnetsClient(buildInnerClient().getSubnets());
    }

    /**
     * Builds an instance of ResourceNavigationLinksClient sync client.
     *
     * @return an instance of ResourceNavigationLinksClient.
     */
    public ResourceNavigationLinksClient buildResourceNavigationLinksClient() {
        return new ResourceNavigationLinksClient(buildInnerClient().getResourceNavigationLinks());
    }

    /**
     * Builds an instance of ServiceAssociationLinksClient sync client.
     *
     * @return an instance of ServiceAssociationLinksClient.
     */
    public ServiceAssociationLinksClient buildServiceAssociationLinksClient() {
        return new ServiceAssociationLinksClient(buildInnerClient().getServiceAssociationLinks());
    }

    /**
     * Builds an instance of VirtualNetworkPeeringsClient sync client.
     *
     * @return an instance of VirtualNetworkPeeringsClient.
     */
    public VirtualNetworkPeeringsClient buildVirtualNetworkPeeringsClient() {
        return new VirtualNetworkPeeringsClient(buildInnerClient().getVirtualNetworkPeerings());
    }

    /**
     * Builds an instance of VirtualNetworkGatewaysClient sync client.
     *
     * @return an instance of VirtualNetworkGatewaysClient.
     */
    public VirtualNetworkGatewaysClient buildVirtualNetworkGatewaysClient() {
        return new VirtualNetworkGatewaysClient(buildInnerClient().getVirtualNetworkGateways());
    }

    /**
     * Builds an instance of VirtualNetworkGatewayConnectionsClient sync client.
     *
     * @return an instance of VirtualNetworkGatewayConnectionsClient.
     */
    public VirtualNetworkGatewayConnectionsClient buildVirtualNetworkGatewayConnectionsClient() {
        return new VirtualNetworkGatewayConnectionsClient(buildInnerClient().getVirtualNetworkGatewayConnections());
    }

    /**
     * Builds an instance of LocalNetworkGatewaysClient sync client.
     *
     * @return an instance of LocalNetworkGatewaysClient.
     */
    public LocalNetworkGatewaysClient buildLocalNetworkGatewaysClient() {
        return new LocalNetworkGatewaysClient(buildInnerClient().getLocalNetworkGateways());
    }

    /**
     * Builds an instance of VirtualNetworkTapsClient sync client.
     *
     * @return an instance of VirtualNetworkTapsClient.
     */
    public VirtualNetworkTapsClient buildVirtualNetworkTapsClient() {
        return new VirtualNetworkTapsClient(buildInnerClient().getVirtualNetworkTaps());
    }

    /**
     * Builds an instance of VirtualRoutersClient sync client.
     *
     * @return an instance of VirtualRoutersClient.
     */
    public VirtualRoutersClient buildVirtualRoutersClient() {
        return new VirtualRoutersClient(buildInnerClient().getVirtualRouters());
    }

    /**
     * Builds an instance of VirtualRouterPeeringsClient sync client.
     *
     * @return an instance of VirtualRouterPeeringsClient.
     */
    public VirtualRouterPeeringsClient buildVirtualRouterPeeringsClient() {
        return new VirtualRouterPeeringsClient(buildInnerClient().getVirtualRouterPeerings());
    }

    /**
     * Builds an instance of VirtualWansClient sync client.
     *
     * @return an instance of VirtualWansClient.
     */
    public VirtualWansClient buildVirtualWansClient() {
        return new VirtualWansClient(buildInnerClient().getVirtualWans());
    }

    /**
     * Builds an instance of VpnSitesClient sync client.
     *
     * @return an instance of VpnSitesClient.
     */
    public VpnSitesClient buildVpnSitesClient() {
        return new VpnSitesClient(buildInnerClient().getVpnSites());
    }

    /**
     * Builds an instance of VpnSiteLinksClient sync client.
     *
     * @return an instance of VpnSiteLinksClient.
     */
    public VpnSiteLinksClient buildVpnSiteLinksClient() {
        return new VpnSiteLinksClient(buildInnerClient().getVpnSiteLinks());
    }

    /**
     * Builds an instance of VpnSitesConfigurationClient sync client.
     *
     * @return an instance of VpnSitesConfigurationClient.
     */
    public VpnSitesConfigurationClient buildVpnSitesConfigurationClient() {
        return new VpnSitesConfigurationClient(buildInnerClient().getVpnSitesConfigurations());
    }

    /**
     * Builds an instance of VpnServerConfigurationsClient sync client.
     *
     * @return an instance of VpnServerConfigurationsClient.
     */
    public VpnServerConfigurationsClient buildVpnServerConfigurationsClient() {
        return new VpnServerConfigurationsClient(buildInnerClient().getVpnServerConfigurations());
    }

    /**
     * Builds an instance of VirtualHubsClient sync client.
     *
     * @return an instance of VirtualHubsClient.
     */
    public VirtualHubsClient buildVirtualHubsClient() {
        return new VirtualHubsClient(buildInnerClient().getVirtualHubs());
    }

    /**
     * Builds an instance of HubVirtualNetworkConnectionsClient sync client.
     *
     * @return an instance of HubVirtualNetworkConnectionsClient.
     */
    public HubVirtualNetworkConnectionsClient buildHubVirtualNetworkConnectionsClient() {
        return new HubVirtualNetworkConnectionsClient(buildInnerClient().getHubVirtualNetworkConnections());
    }

    /**
     * Builds an instance of VpnGatewaysClient sync client.
     *
     * @return an instance of VpnGatewaysClient.
     */
    public VpnGatewaysClient buildVpnGatewaysClient() {
        return new VpnGatewaysClient(buildInnerClient().getVpnGateways());
    }

    /**
     * Builds an instance of VpnConnectionsClient sync client.
     *
     * @return an instance of VpnConnectionsClient.
     */
    public VpnConnectionsClient buildVpnConnectionsClient() {
        return new VpnConnectionsClient(buildInnerClient().getVpnConnections());
    }

    /**
     * Builds an instance of VpnSiteLinkConnectionsClient sync client.
     *
     * @return an instance of VpnSiteLinkConnectionsClient.
     */
    public VpnSiteLinkConnectionsClient buildVpnSiteLinkConnectionsClient() {
        return new VpnSiteLinkConnectionsClient(buildInnerClient().getVpnSiteLinkConnections());
    }

    /**
     * Builds an instance of VpnLinkConnectionsClient sync client.
     *
     * @return an instance of VpnLinkConnectionsClient.
     */
    public VpnLinkConnectionsClient buildVpnLinkConnectionsClient() {
        return new VpnLinkConnectionsClient(buildInnerClient().getVpnLinkConnections());
    }

    /**
     * Builds an instance of P2SVpnGatewaysClient sync client.
     *
     * @return an instance of P2SVpnGatewaysClient.
     */
    public P2SVpnGatewaysClient buildP2SVpnGatewaysClient() {
        return new P2SVpnGatewaysClient(buildInnerClient().getP2SVpnGateways());
    }

    /**
     * Builds an instance of VpnServerConfigurationsAssociatedWithVirtualWanClient sync client.
     *
     * @return an instance of VpnServerConfigurationsAssociatedWithVirtualWanClient.
     */
    public VpnServerConfigurationsAssociatedWithVirtualWanClient
        buildVpnServerConfigurationsAssociatedWithVirtualWanClient() {
        return new VpnServerConfigurationsAssociatedWithVirtualWanClient(
            buildInnerClient().getVpnServerConfigurationsAssociatedWithVirtualWans());
    }

    /**
     * Builds an instance of VirtualHubRouteTableV2SClient sync client.
     *
     * @return an instance of VirtualHubRouteTableV2SClient.
     */
    public VirtualHubRouteTableV2SClient buildVirtualHubRouteTableV2SClient() {
        return new VirtualHubRouteTableV2SClient(buildInnerClient().getVirtualHubRouteTableV2S());
    }

    /**
     * Builds an instance of ExpressRouteGatewaysClient sync client.
     *
     * @return an instance of ExpressRouteGatewaysClient.
     */
    public ExpressRouteGatewaysClient buildExpressRouteGatewaysClient() {
        return new ExpressRouteGatewaysClient(buildInnerClient().getExpressRouteGateways());
    }

    /**
     * Builds an instance of ExpressRouteConnectionsClient sync client.
     *
     * @return an instance of ExpressRouteConnectionsClient.
     */
    public ExpressRouteConnectionsClient buildExpressRouteConnectionsClient() {
        return new ExpressRouteConnectionsClient(buildInnerClient().getExpressRouteConnections());
    }

    /**
     * Builds an instance of HubRouteTablesClient sync client.
     *
     * @return an instance of HubRouteTablesClient.
     */
    public HubRouteTablesClient buildHubRouteTablesClient() {
        return new HubRouteTablesClient(buildInnerClient().getHubRouteTables());
    }

    /**
     * Builds an instance of WebApplicationFirewallPoliciesClient sync client.
     *
     * @return an instance of WebApplicationFirewallPoliciesClient.
     */
    public WebApplicationFirewallPoliciesClient buildWebApplicationFirewallPoliciesClient() {
        return new WebApplicationFirewallPoliciesClient(buildInnerClient().getWebApplicationFirewallPolicies());
    }
}
